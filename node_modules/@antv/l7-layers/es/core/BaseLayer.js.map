{"version":3,"sources":["../../src/core/BaseLayer.ts"],"names":["SyncBailHook","SyncHook","SyncWaterfallHook","BlendType","lazyInject","TYPES","encodePickingColor","EventEmitter","mergeJsonSchemas","normalizePasses","BlendTypes","baseLayerSchema","layerIdCounter","BaseLayer","ILogService","IGlobalConfigService","IShaderModuleService","config","id","name","type","visible","zIndex","minZoom","maxZoom","inited","layerModelNeedUpdate","pickedFeatureID","selectedFeatureID","dataState","dataSourceNeedUpdate","dataMappingNeedUpdate","filterNeedUpdate","featureScaleNeedUpdate","StyleAttrNeedUpdate","hooks","init","afterInit","beforeRender","beforeRenderData","afterRender","beforePickingEncode","afterPickingEncode","beforeHighlight","afterHighlight","beforeSelect","afterSelect","beforeDestroy","afterDestroy","models","multiPassRenderer","plugins","sourceOption","layerModel","iconService","fontService","rendererService","layerService","interactionService","mapService","styleAttributeService","layerSource","postProcessingPassFactory","normalPassFactory","animateOptions","enable","container","encodedData","configSchema","currentPickId","rawConfig","needUpdateConfig","pendingStyleAttributes","scaleOptions","animateStartTime","aniamateStatus","sourceEvent","getLayerConfig","autoFit","fitBoundsOptions","fitBounds","emit","reRender","configService","configToUpdate","sceneId","get","SceneID","setLayerConfig","plugin","push","enableMultiPassRenderer","IIconService","IFontService","IRendererService","ILayerService","IInteractionService","IMapService","IFactoryPostProcessingPass","IFactoryNormalPass","IStyleAttributeService","IMultiPassRenderer","setLayer","forEach","attributeName","attributeField","attributeValues","updateOptions","updateStyleAttribute","scale","field","splitValuesAndCallbackInAttribute","getAll","ILayerPlugin","apply","call","target","updateLayerConfig","getDefaultConfig","animateOption","startAnimate","values","options","rawAnimate","data","setData","on","passes","rest","pass","postProcessingPass","getPostProcessor","getPostProcessingPassByName","cfg","renderModels","activeOption","enableHighlight","color","highlightColor","x","y","pick","then","setTimeout","option","enableSelect","selectColor","blend","index","updateRenderOrder","zoom","getZoom","Infinity","source","getSource","extent","off","destroy","clearAllAttributes","model","removeAllListeners","getLayerStyleAttributes","filter","attribute","needRescale","needRemapping","needRegenerateVertices","length","cluster","updateClusterData","getConfigSchema","getLayerAttributeScale","ticks","items","map","item","value","invertExtent","range","triggerHover","moduleName","vertexShader","fragmentShader","triangulation","shaderModuleService","registerModule","vs","fs","getModule","uniforms","createModel","createAttributesAndIndices","attributes","elements","normal","clock","getDelta","getElapsedTime","stopAnimate","isPick","eventNames","indexOf","isVisible","Error","buildModels","draw","getUninforms","renderLayers","valuesOrCallback","defaultValues","undefined","callback"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport { SyncBailHook, SyncHook, SyncWaterfallHook } from '@antv/async-hook';\nimport {\n  BlendType,\n  gl,\n  IActiveOption,\n  IAnimateOption,\n  IDataState,\n  IEncodeFeature,\n  IFontService,\n  IGlobalConfigService,\n  IIconService,\n  IInteractionService,\n  ILayer,\n  ILayerConfig,\n  ILayerModel,\n  ILayerModelInitializationOptions,\n  ILayerPlugin,\n  ILayerService,\n  ILogService,\n  IMapService,\n  IModel,\n  IModelInitializationOptions,\n  IMultiPassRenderer,\n  IPass,\n  IPostProcessingPass,\n  IRendererService,\n  IScale,\n  IScaleOptions,\n  IShaderModuleService,\n  ISourceCFG,\n  IStyleAttributeInitializationOptions,\n  IStyleAttributeService,\n  IStyleAttributeUpdateOptions,\n  lazyInject,\n  ScaleAttributeType,\n  ScaleTypeName,\n  ScaleTypes,\n  StyleAttributeField,\n  StyleAttributeOption,\n  TYPES,\n} from '@antv/l7-core';\nimport Source from '@antv/l7-source';\nimport { encodePickingColor } from '@antv/l7-utils';\nimport { EventEmitter } from 'eventemitter3';\nimport { Container } from 'inversify';\nimport { isFunction, isObject } from 'lodash';\n// @ts-ignore\nimport mergeJsonSchemas from 'merge-json-schemas';\nimport { normalizePasses } from '../plugins/MultiPassRendererPlugin';\nimport { BlendTypes } from '../utils/blend';\nimport baseLayerSchema from './schema';\n/**\n * 分配 layer id\n */\nlet layerIdCounter = 0;\n\nexport default class BaseLayer<ChildLayerStyleOptions = {}> extends EventEmitter\n  implements ILayer {\n  public id: string = `${layerIdCounter++}`;\n  public name: string = `${layerIdCounter}`;\n  public type: string;\n  public visible: boolean = true;\n  public zIndex: number = 0;\n  public minZoom: number;\n  public maxZoom: number;\n  public inited: boolean = false;\n  public layerModelNeedUpdate: boolean = false;\n  public pickedFeatureID: number | null = null;\n  public selectedFeatureID: number | null = null;\n\n  public dataState: IDataState = {\n    dataSourceNeedUpdate: false,\n    dataMappingNeedUpdate: false,\n    filterNeedUpdate: false,\n    featureScaleNeedUpdate: false,\n    StyleAttrNeedUpdate: false,\n  };\n  // 生命周期钩子\n  public hooks = {\n    init: new SyncBailHook(),\n    afterInit: new SyncBailHook(),\n    beforeRender: new SyncBailHook(),\n    beforeRenderData: new SyncWaterfallHook(),\n    afterRender: new SyncHook(),\n    beforePickingEncode: new SyncHook(),\n    afterPickingEncode: new SyncHook(),\n    beforeHighlight: new SyncHook(['pickedColor']),\n    afterHighlight: new SyncHook(),\n    beforeSelect: new SyncHook(['pickedColor']),\n    afterSelect: new SyncHook(),\n    beforeDestroy: new SyncHook(),\n    afterDestroy: new SyncHook(),\n  };\n\n  // 待渲染 model 列表\n  public models: IModel[] = [];\n\n  // 每个 Layer 都有一个\n  public multiPassRenderer: IMultiPassRenderer;\n\n  // 注入插件集\n  public plugins: ILayerPlugin[];\n\n  public sourceOption: {\n    data: any;\n    options?: ISourceCFG;\n  };\n\n  public layerModel: ILayerModel;\n\n  @lazyInject(TYPES.ILogService)\n  protected readonly logger: ILogService;\n\n  @lazyInject(TYPES.IGlobalConfigService)\n  protected readonly configService: IGlobalConfigService;\n\n  @lazyInject(TYPES.IShaderModuleService)\n  protected readonly shaderModuleService: IShaderModuleService;\n\n  protected iconService: IIconService;\n\n  protected fontService: IFontService;\n\n  protected rendererService: IRendererService;\n\n  protected layerService: ILayerService;\n\n  protected interactionService: IInteractionService;\n\n  protected mapService: IMapService;\n\n  protected styleAttributeService: IStyleAttributeService;\n\n  protected layerSource: Source;\n\n  protected postProcessingPassFactory: (\n    name: string,\n  ) => IPostProcessingPass<unknown>;\n  protected normalPassFactory: (name: string) => IPass<unknown>;\n\n  protected animateOptions: IAnimateOption = { enable: false };\n\n  /**\n   * 图层容器\n   */\n  private container: Container;\n\n  private encodedData: IEncodeFeature[];\n\n  private configSchema: object;\n\n  private currentPickId: number | null = null;\n\n  private rawConfig: Partial<ILayerConfig & ChildLayerStyleOptions>;\n\n  private needUpdateConfig: Partial<ILayerConfig & ChildLayerStyleOptions>;\n\n  /**\n   * 待更新样式属性，在初始化阶段完成注册\n   */\n  private pendingStyleAttributes: Array<{\n    attributeName: string;\n    attributeField: StyleAttributeField;\n    attributeValues?: StyleAttributeOption;\n    defaultName?: string;\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>;\n  }> = [];\n\n  private scaleOptions: IScaleOptions = {};\n\n  private animateStartTime: number;\n\n  private aniamateStatus: boolean = false;\n\n  // private pickingPassRender: IPass<'pixelPicking'>;\n\n  constructor(config: Partial<ILayerConfig & ChildLayerStyleOptions> = {}) {\n    super();\n    this.name = config.name || this.id;\n    this.zIndex = config.zIndex || 0;\n    this.rawConfig = config;\n  }\n\n  public getLayerConfig() {\n    return this.configService.getLayerConfig<ChildLayerStyleOptions>(this.id);\n  }\n\n  public updateLayerConfig(\n    configToUpdate: Partial<ILayerConfig | ChildLayerStyleOptions>,\n  ) {\n    if (!this.inited) {\n      this.needUpdateConfig = {\n        ...this.needUpdateConfig,\n        ...configToUpdate,\n      };\n    } else {\n      const sceneId = this.container.get<string>(TYPES.SceneID);\n      this.configService.setLayerConfig(sceneId, this.id, {\n        ...this.configService.getLayerConfig(this.id),\n        ...this.needUpdateConfig,\n        ...configToUpdate,\n      });\n      this.needUpdateConfig = {};\n    }\n  }\n\n  /**\n   * 注入图层容器，父容器为场景容器\n   * RootContainer 1\n   *  -> SceneContainer 1.*\n   *   -> LayerContainer 1.*\n   */\n  public setContainer(container: Container) {\n    this.container = container;\n  }\n\n  public getContainer() {\n    return this.container;\n  }\n\n  public addPlugin(plugin: ILayerPlugin) {\n    // TODO: 控制插件注册顺序\n    // @example:\n    // pointLayer.addPlugin(new MyCustomPlugin(), {\n    //   before: 'L7BuiltinPlugin'\n    // });\n    this.plugins.push(plugin);\n    return this;\n  }\n\n  public init() {\n    // 设置配置项\n    const sceneId = this.container.get<string>(TYPES.SceneID);\n    // 初始化图层配置项\n    const { enableMultiPassRenderer = false } = this.rawConfig;\n    this.configService.setLayerConfig(sceneId, this.id, {\n      enableMultiPassRenderer,\n    });\n\n    // 全局容器服务\n\n    // 场景容器服务\n    this.iconService = this.container.get<IIconService>(TYPES.IIconService);\n    this.fontService = this.container.get<IFontService>(TYPES.IFontService);\n\n    this.rendererService = this.container.get<IRendererService>(\n      TYPES.IRendererService,\n    );\n    this.layerService = this.container.get<ILayerService>(TYPES.ILayerService);\n    this.interactionService = this.container.get<IInteractionService>(\n      TYPES.IInteractionService,\n    );\n    this.mapService = this.container.get<IMapService>(TYPES.IMapService);\n    this.postProcessingPassFactory = this.container.get(\n      TYPES.IFactoryPostProcessingPass,\n    );\n    this.normalPassFactory = this.container.get(TYPES.IFactoryNormalPass);\n\n    // 图层容器服务\n    this.styleAttributeService = this.container.get<IStyleAttributeService>(\n      TYPES.IStyleAttributeService,\n    );\n    this.multiPassRenderer = this.container.get<IMultiPassRenderer>(\n      TYPES.IMultiPassRenderer,\n    );\n    this.multiPassRenderer.setLayer(this);\n\n    // 完成样式服务注册完成前添加的属性\n    this.pendingStyleAttributes.forEach(\n      ({ attributeName, attributeField, attributeValues, updateOptions }) => {\n        this.styleAttributeService.updateStyleAttribute(\n          attributeName,\n          {\n            // @ts-ignore\n            scale: {\n              field: attributeField,\n              ...this.splitValuesAndCallbackInAttribute(\n                // @ts-ignore\n                attributeValues,\n                // @ts-ignore\n                this.getLayerConfig()[attributeName],\n              ),\n            },\n          },\n          // @ts-ignore\n          updateOptions,\n        );\n      },\n    );\n    this.pendingStyleAttributes = [];\n\n    // 获取插件集\n    this.plugins = this.container.getAll<ILayerPlugin>(TYPES.ILayerPlugin);\n    // 完成插件注册，传入场景和图层容器内的服务\n    for (const plugin of this.plugins) {\n      plugin.apply(this, {\n        rendererService: this.rendererService,\n        mapService: this.mapService,\n        styleAttributeService: this.styleAttributeService,\n        normalPassFactory: this.normalPassFactory,\n        postProcessingPassFactory: this.postProcessingPassFactory,\n      });\n    }\n\n    // 触发 init 生命周期插件\n    this.hooks.init.call();\n    // this.pickingPassRender = this.normalPassFactory('pixelPicking');\n    // this.pickingPassRender.init(this);\n    this.hooks.afterInit.call();\n\n    // 触发初始化完成事件;\n    this.emit('inited', {\n      target: this,\n      type: 'inited',\n    });\n    this.emit('add', {\n      target: this,\n      type: 'add',\n    });\n    return this;\n  }\n  /**\n   * Model初始化前需要更新Model样式\n   */\n  public prepareBuildModel() {\n    this.inited = true;\n    this.updateLayerConfig({\n      ...(this.getDefaultConfig() as object),\n      ...this.rawConfig,\n    });\n\n    // 启动动画\n    const { animateOption } = this.getLayerConfig();\n    if (animateOption?.enable) {\n      this.layerService.startAnimate();\n      this.aniamateStatus = true;\n    }\n  }\n  public color(\n    field: StyleAttributeField,\n    values?: StyleAttributeOption,\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>,\n  ) {\n    // 设置 color、size、shape、style 时由于场景服务尚未完成（并没有调用 scene.addLayer），因此暂时加入待更新属性列表\n    this.updateStyleAttribute('color', field, values, updateOptions);\n\n    // this.pendingStyleAttributes.push({\n    //   attributeName: 'color',\n    //   attributeField: field,\n    //   attributeValues: values,\n    //   defaultName: 'colors',\n    //   updateOptions,\n    // });\n    return this;\n  }\n\n  public size(\n    field: StyleAttributeField,\n    values?: StyleAttributeOption,\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>,\n  ) {\n    this.updateStyleAttribute('size', field, values, updateOptions);\n    return this;\n  }\n  // 对mapping后的数据过滤，scale保持不变\n  public filter(\n    field: StyleAttributeField,\n    values?: StyleAttributeOption,\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>,\n  ) {\n    this.updateStyleAttribute('filter', field, values, updateOptions);\n    return this;\n  }\n\n  public shape(\n    field: StyleAttributeField,\n    values?: StyleAttributeOption,\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>,\n  ) {\n    this.updateStyleAttribute('shape', field, values, updateOptions);\n    return this;\n  }\n  public label(\n    field: StyleAttributeField,\n    values?: StyleAttributeOption,\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>,\n  ) {\n    this.pendingStyleAttributes.push({\n      attributeName: 'label',\n      attributeField: field,\n      attributeValues: values,\n      updateOptions,\n    });\n    return this;\n  }\n  public animate(options: IAnimateOption | boolean) {\n    let rawAnimate: Partial<IAnimateOption> = {};\n    if (isObject(options)) {\n      rawAnimate.enable = true;\n      rawAnimate = {\n        ...rawAnimate,\n        ...options,\n      };\n    } else {\n      rawAnimate.enable = options;\n    }\n    this.updateLayerConfig({\n      animateOption: rawAnimate,\n    });\n    // this.animateOptions = options;\n    return this;\n  }\n\n  public source(data: any, options?: ISourceCFG): ILayer {\n    this.sourceOption = {\n      data,\n      options,\n    };\n    return this;\n  }\n\n  public setData(data: any, options?: ISourceCFG) {\n    if (this.inited) {\n      this.layerSource.setData(data);\n    } else {\n      this.on('inited', () => {\n        this.layerSource.setData(data);\n      });\n    }\n\n    return this;\n  }\n  public style(\n    options: Partial<ChildLayerStyleOptions> & Partial<ILayerConfig>,\n  ): ILayer {\n    const { passes, ...rest } = options;\n\n    // passes 特殊处理\n    if (passes) {\n      normalizePasses(passes).forEach(\n        (pass: [string, { [key: string]: unknown }]) => {\n          const postProcessingPass = this.multiPassRenderer\n            .getPostProcessor()\n            .getPostProcessingPassByName(pass[0]);\n          if (postProcessingPass) {\n            postProcessingPass.updateOptions(pass[1]);\n          }\n        },\n      );\n    }\n\n    this.rawConfig = {\n      ...this.rawConfig,\n      ...rest,\n    };\n\n    if (this.container) {\n      this.updateLayerConfig(this.rawConfig);\n    }\n    return this;\n  }\n  public scale(field: string | IScaleOptions, cfg: IScale) {\n    if (isObject(field)) {\n      this.scaleOptions = {\n        ...this.scaleOptions,\n        ...field,\n      };\n    } else {\n      this.scaleOptions[field] = cfg;\n    }\n    return this;\n  }\n  public render(): ILayer {\n    // if (\n    //   this.needPick() &&\n    //   this.multiPassRenderer &&\n    //   this.multiPassRenderer.getRenderFlag()\n    // ) {\n    //   this.multiPassRenderer.render();\n    // } else if (this.needPick() && this.multiPassRenderer) {\n    //   this.renderModels();\n    // } else {\n    //   this.renderModels();\n    // }\n\n    this.renderModels();\n    // this.multiPassRenderer.render();\n    // this.renderModels();\n    return this;\n  }\n\n  public active(options: IActiveOption) {\n    const activeOption: Partial<ILayerConfig> = {};\n    activeOption.enableHighlight = isObject(options) ? true : options;\n    if (isObject(options)) {\n      activeOption.enableHighlight = true;\n      if (options.color) {\n        activeOption.highlightColor = options.color;\n      }\n    } else {\n      activeOption.enableHighlight = !!options;\n    }\n    this.updateLayerConfig(activeOption);\n    return this;\n  }\n  public setActive(\n    id: number | { x: number; y: number },\n    options?: IActiveOption,\n  ): void {\n    if (isObject(id)) {\n      const { x = 0, y = 0 } = id;\n      this.updateLayerConfig({\n        highlightColor: isObject(options)\n          ? options.color\n          : this.getLayerConfig().highlightColor,\n      });\n      this.pick({ x, y });\n    } else {\n      this.updateLayerConfig({\n        pickedFeatureID: id,\n        highlightColor: isObject(options)\n          ? options.color\n          : this.getLayerConfig().highlightColor,\n      });\n      this.hooks.beforeSelect\n        .call(encodePickingColor(id as number) as number[])\n        // @ts-ignore\n        .then(() => {\n          setTimeout(() => {\n            this.reRender();\n          }, 1);\n        });\n    }\n  }\n\n  public select(option: IActiveOption | boolean): ILayer {\n    const activeOption: Partial<ILayerConfig> = {};\n    activeOption.enableSelect = isObject(option) ? true : option;\n    if (isObject(option)) {\n      activeOption.enableSelect = true;\n      if (option.color) {\n        activeOption.selectColor = option.color;\n      }\n    } else {\n      activeOption.enableSelect = !!option;\n    }\n    this.updateLayerConfig(activeOption);\n    return this;\n  }\n\n  public setSelect(\n    id: number | { x: number; y: number },\n    options?: IActiveOption,\n  ): void {\n    if (isObject(id)) {\n      const { x = 0, y = 0 } = id;\n      this.updateLayerConfig({\n        selectColor: isObject(options)\n          ? options.color\n          : this.getLayerConfig().selectColor,\n      });\n      this.pick({ x, y });\n    } else {\n      this.updateLayerConfig({\n        pickedFeatureID: id,\n        selectColor: isObject(options)\n          ? options.color\n          : this.getLayerConfig().selectColor,\n      });\n      this.hooks.beforeSelect\n        .call(encodePickingColor(id as number) as number[])\n        // @ts-ignore\n        .then(() => {\n          setTimeout(() => {\n            this.reRender();\n          }, 1);\n        });\n    }\n  }\n  public setBlend(type: keyof typeof BlendType): void {\n    this.updateLayerConfig({\n      blend: type,\n    });\n    this.layerModelNeedUpdate = true;\n    this.reRender();\n  }\n  public show(): ILayer {\n    this.updateLayerConfig({\n      visible: true,\n    });\n    this.reRender();\n    return this;\n  }\n\n  public hide(): ILayer {\n    this.updateLayerConfig({\n      visible: false,\n    });\n    this.reRender();\n    return this;\n  }\n  public setIndex(index: number): ILayer {\n    this.zIndex = index;\n    this.layerService.updateRenderOrder();\n    return this;\n  }\n\n  public setCurrentPickId(id: number) {\n    this.currentPickId = id;\n  }\n\n  public getCurrentPickId(): number | null {\n    return this.currentPickId;\n  }\n\n  public setCurrentSelectedId(id: number) {\n    this.selectedFeatureID = id;\n  }\n\n  public getCurrentSelectedId(): number | null {\n    return this.selectedFeatureID;\n  }\n  public isVisible(): boolean {\n    const zoom = this.mapService.getZoom();\n    const {\n      visible,\n      minZoom = -Infinity,\n      maxZoom = Infinity,\n    } = this.getLayerConfig();\n    return !!visible && zoom >= minZoom && zoom <= maxZoom;\n  }\n\n  public setMinZoom(minZoom: number): ILayer {\n    this.updateLayerConfig({\n      minZoom,\n    });\n    return this;\n  }\n\n  public getMinZoom(): number {\n    const { minZoom } = this.getLayerConfig();\n    return minZoom as number;\n  }\n\n  public getMaxZoom(): number {\n    const { maxZoom } = this.getLayerConfig();\n    return maxZoom as number;\n  }\n\n  public get(name: string) {\n    const cfg = this.getLayerConfig();\n    // @ts-ignore\n    return cfg[name];\n  }\n\n  public setMaxZoom(maxZoom: number): ILayer {\n    this.updateLayerConfig({\n      maxZoom,\n    });\n    return this;\n  }\n  /**\n   * zoom to layer Bounds\n   */\n  public fitBounds(fitBoundsOptions?: unknown): ILayer {\n    if (!this.inited) {\n      this.updateLayerConfig({\n        autoFit: true,\n      });\n      return this;\n    }\n    const source = this.getSource();\n    const extent = source.extent;\n    this.mapService.fitBounds(\n      [\n        [extent[0], extent[1]],\n        [extent[2], extent[3]],\n      ],\n      fitBoundsOptions,\n    );\n    return this;\n  }\n\n  public destroy() {\n    this.hooks.beforeDestroy.call();\n    // 清除sources事件\n    this.layerSource.off('update', this.sourceEvent);\n\n    this.multiPassRenderer.destroy();\n\n    // 清除所有属性以及关联的 vao\n    this.styleAttributeService.clearAllAttributes();\n    // 销毁所有 model\n    this.models.forEach((model) => model.destroy());\n\n    this.hooks.afterDestroy.call();\n\n    this.emit('remove', {\n      target: this,\n      type: 'remove',\n    });\n\n    this.removeAllListeners();\n\n    // 解绑图层容器中的服务\n    // this.container.unbind(TYPES.IStyleAttributeService);\n  }\n  public clear() {\n    this.styleAttributeService.clearAllAttributes();\n    // 销毁所有 model\n    this.models.forEach((model) => model.destroy());\n  }\n\n  public isDirty() {\n    return !!(\n      this.styleAttributeService.getLayerStyleAttributes() || []\n    ).filter(\n      (attribute) =>\n        attribute.needRescale ||\n        attribute.needRemapping ||\n        attribute.needRegenerateVertices,\n    ).length;\n  }\n\n  public setSource(source: Source) {\n    this.layerSource = source;\n    const zoom = this.mapService.getZoom();\n    if (this.layerSource.cluster) {\n      this.layerSource.updateClusterData(zoom);\n    }\n    // source 可能会复用，会在其它layer被修改\n    this.layerSource.on('update', this.sourceEvent);\n  }\n  public getSource() {\n    return this.layerSource;\n  }\n\n  public getScaleOptions() {\n    return this.scaleOptions;\n  }\n\n  public setEncodedData(encodedData: IEncodeFeature[]) {\n    this.encodedData = encodedData;\n  }\n  public getEncodedData() {\n    return this.encodedData;\n  }\n\n  public getConfigSchemaForValidation() {\n    if (!this.configSchema) {\n      // 相比 allOf, merge 有一些优势\n      // @see https://github.com/goodeggs/merge-json-schemas\n      this.configSchema = mergeJsonSchemas([\n        baseLayerSchema,\n        this.getConfigSchema(),\n      ]);\n    }\n    return this.configSchema;\n  }\n  public getLegendItems(name: string): any {\n    const scale = this.styleAttributeService.getLayerAttributeScale(name);\n    if (scale) {\n      if (scale.ticks) {\n        const items = scale.ticks().map((item: any) => {\n          return {\n            value: item,\n            [name]: scale(item),\n          };\n        });\n        return items;\n      } else if (scale.invertExtent) {\n        const items = scale.range().map((item: any) => {\n          return {\n            value: scale.invertExtent(item),\n            [name]: item,\n          };\n        });\n        return items;\n      }\n    } else {\n      return [];\n    }\n  }\n\n  public pick({ x, y }: { x: number; y: number }) {\n    this.interactionService.triggerHover({ x, y });\n  }\n\n  public buildLayerModel(\n    options: ILayerModelInitializationOptions &\n      Partial<IModelInitializationOptions>,\n  ): IModel {\n    const {\n      moduleName,\n      vertexShader,\n      fragmentShader,\n      triangulation,\n      ...rest\n    } = options;\n    this.shaderModuleService.registerModule(moduleName, {\n      vs: vertexShader,\n      fs: fragmentShader,\n    });\n    const { vs, fs, uniforms } = this.shaderModuleService.getModule(moduleName);\n    const { createModel } = this.rendererService;\n    const {\n      attributes,\n      elements,\n    } = this.styleAttributeService.createAttributesAndIndices(\n      this.encodedData,\n      triangulation,\n    );\n    return createModel({\n      attributes,\n      uniforms,\n      fs,\n      vs,\n      elements,\n      blend: BlendTypes[BlendType.normal],\n      ...rest,\n    });\n  }\n\n  public getTime() {\n    return this.layerService.clock.getDelta();\n  }\n  public setAnimateStartTime() {\n    this.animateStartTime = this.layerService.clock.getElapsedTime();\n  }\n  public stopAnimate() {\n    if (this.aniamateStatus) {\n      this.layerService.stopAnimate();\n      this.aniamateStatus = false;\n      this.updateLayerConfig({\n        animateOption: {\n          enable: false,\n        },\n      });\n    }\n  }\n  public getLayerAnimateTime(): number {\n    return this.layerService.clock.getElapsedTime() - this.animateStartTime;\n  }\n\n  public needPick(type: string): boolean {\n    const {\n      enableHighlight = true,\n      enableSelect = true,\n    } = this.getLayerConfig();\n    // 判断layer是否监听事件;\n    let isPick =\n      this.eventNames().indexOf(type) !== -1 ||\n      this.eventNames().indexOf('un' + type) !== -1;\n    if ((type === 'click' || type === 'dblclick') && enableSelect) {\n      isPick = true;\n    }\n    if (\n      type === 'mousemove' &&\n      (enableHighlight ||\n        this.eventNames().indexOf('mouseenter') !== -1 ||\n        this.eventNames().indexOf('unmousemove') !== -1 ||\n        this.eventNames().indexOf('mouseout') !== -1)\n    ) {\n      isPick = true;\n    }\n    return this.isVisible() && isPick;\n  }\n\n  public buildModels() {\n    throw new Error('Method not implemented.');\n  }\n\n  public renderModels() {\n    if (this.layerModelNeedUpdate && this.layerModel) {\n      this.models = this.layerModel.buildModels();\n      this.hooks.beforeRender.call();\n      this.layerModelNeedUpdate = false;\n    }\n    this.models.forEach((model) => {\n      model.draw({\n        uniforms: this.layerModel.getUninforms(),\n      });\n    });\n    return this;\n  }\n\n  protected getConfigSchema() {\n    throw new Error('Method not implemented.');\n  }\n\n  protected getModelType(): unknown {\n    throw new Error('Method not implemented.');\n  }\n  protected getDefaultConfig() {\n    return {};\n  }\n\n  private sourceEvent = () => {\n    this.dataState.dataSourceNeedUpdate = true;\n    const { autoFit, fitBoundsOptions } = this.getLayerConfig();\n    if (autoFit) {\n      this.fitBounds(fitBoundsOptions);\n    }\n\n    this.emit('dataUpdate');\n    this.reRender();\n  };\n\n  private reRender() {\n    if (this.inited) {\n      this.layerService.renderLayers();\n    }\n  }\n  private splitValuesAndCallbackInAttribute(\n    valuesOrCallback?: unknown[],\n    defaultValues?: unknown[],\n  ) {\n    return {\n      values: isFunction(valuesOrCallback)\n        ? undefined\n        : valuesOrCallback || defaultValues,\n      callback: isFunction(valuesOrCallback) ? valuesOrCallback : undefined,\n    };\n  }\n\n  private updateStyleAttribute(\n    type: string,\n    field: StyleAttributeField,\n    values?: StyleAttributeOption,\n    updateOptions?: Partial<IStyleAttributeUpdateOptions>,\n  ) {\n    if (!this.inited) {\n      this.pendingStyleAttributes.push({\n        attributeName: type,\n        attributeField: field,\n        attributeValues: values,\n        updateOptions,\n      });\n    } else {\n      this.styleAttributeService.updateStyleAttribute(\n        type,\n        {\n          // @ts-ignore\n          scale: {\n            field,\n            ...this.splitValuesAndCallbackInAttribute(\n              // @ts-ignore\n              values,\n              // @ts-ignore\n              this.getLayerConfig()[field],\n            ),\n          },\n        },\n        // @ts-ignore\n        updateOptions,\n      );\n    }\n  }\n}\n"],"file":"BaseLayer.js"}