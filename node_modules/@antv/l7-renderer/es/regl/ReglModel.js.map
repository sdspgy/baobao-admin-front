{"version":3,"sources":["../../src/regl/ReglModel.ts"],"names":["gl","blendEquationMap","blendFuncMap","cullFaceMap","depthFuncMap","primitiveMap","stencilFuncMap","stencilOpMap","ReglModel","reGl","options","drawCommand","uniforms","vs","fs","attributes","primitive","count","elements","depth","blend","stencil","cull","instances","reglUniforms","extractUniforms","Object","keys","forEach","uniformName","prop","reglAttributes","name","get","drawParams","frag","vert","undefined","TRIANGLES","initDepthDrawParams","initBlendDrawParams","initStencilDrawParams","initCullDrawParams","reglDrawProps","type","Array","isArray","BYTES_PER_ELEMENT","enable","mask","func","LESS","range","equation","color","srcRGB","SRC_ALPHA","srcAlpha","dstRGB","ONE_MINUS_SRC_ALPHA","dstAlpha","rgb","FUNC_ADD","alpha","cmp","ALWAYS","ref","opFront","fail","KEEP","zfail","zpass","opBack","face","BACK","extractedUniforms","extractUniformsRecursively","uniformValue","prefix","childName","child","idx"],"mappings":";;;;;;;;;;;AAAA,SACEA,EADF,QAMO,eANP;AASA,SACEC,gBADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,YALF,EAMEC,cANF,EAOEC,YAPF,QAQO,aARP;;IAiBqBC,S;AAOnB,qBAAYC,IAAZ,EAA6BC,OAA7B,EAAmE;AAAA;;AAAA,SAN3DD,IAM2D;AAAA,SAL3DE,WAK2D;AAAA,SAJ3DC,QAI2D,GAF/D,EAE+D;AACjE,SAAKH,IAAL,GAAYA,IAAZ;AADiE,QAG/DI,EAH+D,GAe7DH,OAf6D,CAG/DG,EAH+D;AAAA,QAI/DC,EAJ+D,GAe7DJ,OAf6D,CAI/DI,EAJ+D;AAAA,QAK/DC,UAL+D,GAe7DL,OAf6D,CAK/DK,UAL+D;AAAA,QAM/DH,QAN+D,GAe7DF,OAf6D,CAM/DE,QAN+D;AAAA,QAO/DI,SAP+D,GAe7DN,OAf6D,CAO/DM,SAP+D;AAAA,QAQ/DC,KAR+D,GAe7DP,OAf6D,CAQ/DO,KAR+D;AAAA,QAS/DC,QAT+D,GAe7DR,OAf6D,CAS/DQ,QAT+D;AAAA,QAU/DC,KAV+D,GAe7DT,OAf6D,CAU/DS,KAV+D;AAAA,QAW/DC,KAX+D,GAe7DV,OAf6D,CAW/DU,KAX+D;AAAA,QAY/DC,OAZ+D,GAe7DX,OAf6D,CAY/DW,OAZ+D;AAAA,QAa/DC,IAb+D,GAe7DZ,OAf6D,CAa/DY,IAb+D;AAAA,QAc/DC,SAd+D,GAe7Db,OAf6D,CAc/Da,SAd+D;AAgBjE,QAAMC,YAAyC,GAAG,EAAlD;;AACA,QAAIZ,QAAJ,EAAc;AACZ,WAAKA,QAAL,GAAgB,KAAKa,eAAL,CAAqBb,QAArB,CAAhB;AACAc,MAAAA,MAAM,CAACC,IAAP,CAAYf,QAAZ,EAAsBgB,OAAtB,CAA8B,UAACC,WAAD,EAAiB;AAG7CL,QAAAA,YAAY,CAACK,WAAD,CAAZ,GAA4BpB,IAAI,CAACqB,IAAL,CAAUD,WAAV,CAA5B;AACD,OAJD;AAKD;;AAED,QAAME,cAAiD,GAAG,EAA1D;AACAL,IAAAA,MAAM,CAACC,IAAP,CAAYZ,UAAZ,EAAwBa,OAAxB,CAAgC,UAACI,IAAD,EAAkB;AAChDD,MAAAA,cAAc,CAACC,IAAD,CAAd,GAAwBjB,UAAU,CAACiB,IAAD,CAAX,CAAoCC,GAApC,EAAvB;AACD,KAFD;AAGA,QAAMC,UAA2B,GAAG;AAClCnB,MAAAA,UAAU,EAAEgB,cADsB;AAElCI,MAAAA,IAAI,EAAErB,EAF4B;AAGlCF,MAAAA,QAAQ,EAAEY,YAHwB;AAIlCY,MAAAA,IAAI,EAAEvB,EAJ4B;AAKlCG,MAAAA,SAAS,EACPX,YAAY,CAACW,SAAS,KAAKqB,SAAd,GAA0BrC,EAAE,CAACsC,SAA7B,GAAyCtB,SAA1C;AANoB,KAApC;;AAQA,QAAIO,SAAJ,EAAe;AACbW,MAAAA,UAAU,CAACX,SAAX,GAAuBA,SAAvB;AACD;;AAGD,QAAIN,KAAJ,EAAW;AACTiB,MAAAA,UAAU,CAACjB,KAAX,GAAmBA,KAAnB;AACD;;AAED,QAAIC,QAAJ,EAAc;AACZgB,MAAAA,UAAU,CAAChB,QAAX,GAAuBA,QAAD,CAA2Be,GAA3B,EAAtB;AACD;;AAED,SAAKM,mBAAL,CAAyB;AAAEpB,MAAAA,KAAK,EAALA;AAAF,KAAzB,EAAoCe,UAApC;AACA,SAAKM,mBAAL,CAAyB;AAAEpB,MAAAA,KAAK,EAALA;AAAF,KAAzB,EAAoCc,UAApC;AACA,SAAKO,qBAAL,CAA2B;AAAEpB,MAAAA,OAAO,EAAPA;AAAF,KAA3B,EAAwCa,UAAxC;AACA,SAAKQ,kBAAL,CAAwB;AAAEpB,MAAAA,IAAI,EAAJA;AAAF,KAAxB,EAAkCY,UAAlC;AACA,SAAKvB,WAAL,GAAmBF,IAAI,CAACyB,UAAD,CAAvB;AACD;;;;gCAEkBtB,Q,EAAuC;AACxD,WAAKA,QAAL,qBACK,KAAKA,QADV,MAEK,KAAKa,eAAL,CAAqBb,QAArB,CAFL;AAID;;;yBAEWF,O,EAA4B;AACtC,UAAME,QAEL,qBACI,KAAKA,QADT,MAEI,KAAKa,eAAL,CAAqBf,OAAO,CAACE,QAAR,IAAoB,EAAzC,CAFJ,CAFD;;AAMA,UAAM+B,aAOL,GAAG,EAPJ;AASAjB,MAAAA,MAAM,CAACC,IAAP,CAAYf,QAAZ,EAAsBgB,OAAtB,CAA8B,UAACC,WAAD,EAAyB;AACrD,YAAMe,IAAI,WAAUhC,QAAQ,CAACiB,WAAD,CAAlB,CAAV;;AACA,YACEe,IAAI,KAAK,SAAT,IACAA,IAAI,KAAK,QADT,IAEAC,KAAK,CAACC,OAAN,CAAclC,QAAQ,CAACiB,WAAD,CAAtB,CAFA,IAIAjB,QAAQ,CAACiB,WAAD,CAAR,CAAsBkB,iBALxB,EAME;AACAJ,UAAAA,aAAa,CAACd,WAAD,CAAb,GAA6BjB,QAAQ,CAACiB,WAAD,CAArC;AAID,SAXD,MAWO;AACLc,UAAAA,aAAa,CAACd,WAAD,CAAb,GAA8BjB,QAAQ,CAACiB,WAAD,CAAT,CAEVI,GAFU,EAA7B;AAGD;AACF,OAlBD;AAmBA,WAAKtB,WAAL,CAAiBgC,aAAjB;AACD;;;8BAEgB,CAEhB;;;8CAOCT,U,EACA;AAAA,UAFEf,KAEF,QAFEA,KAEF;;AACA,UAAIA,KAAJ,EAAW;AACTe,QAAAA,UAAU,CAACf,KAAX,GAAmB;AACjB6B,UAAAA,MAAM,EAAE7B,KAAK,CAAC6B,MAAN,KAAiBX,SAAjB,GAA6B,IAA7B,GAAoC,CAAC,CAAClB,KAAK,CAAC6B,MADnC;AAEjBC,UAAAA,IAAI,EAAE9B,KAAK,CAAC8B,IAAN,KAAeZ,SAAf,GAA2B,IAA3B,GAAkC,CAAC,CAAClB,KAAK,CAAC8B,IAF/B;AAGjBC,UAAAA,IAAI,EAAE9C,YAAY,CAACe,KAAK,CAAC+B,IAAN,IAAclD,EAAE,CAACmD,IAAlB,CAHD;AAIjBC,UAAAA,KAAK,EAAEjC,KAAK,CAACiC,KAAN,IAAe,CAAC,CAAD,EAAI,CAAJ;AAJL,SAAnB;AAMD;AACF;;;+CAOClB,U,EACA;AAAA,UAFEd,KAEF,SAFEA,KAEF;;AACA,UAAIA,KAAJ,EAAW;AAAA,YACD4B,MADC,GACgD5B,KADhD,CACD4B,MADC;AAAA,YACOE,IADP,GACgD9B,KADhD,CACO8B,IADP;AAAA,YACaG,QADb,GACgDjC,KADhD,CACaiC,QADb;AAAA,2BACgDjC,KADhD,CACuBkC,KADvB;AAAA,YACuBA,KADvB,6BAC+B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAD/B;AAGTpB,QAAAA,UAAU,CAACd,KAAX,GAAmB;AACjB4B,UAAAA,MAAM,EAAE,CAAC,CAACA,MADO;AAEjBE,UAAAA,IAAI,EAAE;AACJK,YAAAA,MAAM,EAAErD,YAAY,CAAEgD,IAAI,IAAIA,IAAI,CAACK,MAAd,IAAyBvD,EAAE,CAACwD,SAA7B,CADhB;AAEJC,YAAAA,QAAQ,EAAEvD,YAAY,CAAEgD,IAAI,IAAIA,IAAI,CAACO,QAAd,IAA2BzD,EAAE,CAACwD,SAA/B,CAFlB;AAGJE,YAAAA,MAAM,EAAExD,YAAY,CAAEgD,IAAI,IAAIA,IAAI,CAACQ,MAAd,IAAyB1D,EAAE,CAAC2D,mBAA7B,CAHhB;AAIJC,YAAAA,QAAQ,EACN1D,YAAY,CAAEgD,IAAI,IAAIA,IAAI,CAACU,QAAd,IAA2B5D,EAAE,CAAC2D,mBAA/B;AALV,WAFW;AASjBN,UAAAA,QAAQ,EAAE;AACRQ,YAAAA,GAAG,EAAE5D,gBAAgB,CAAEoD,QAAQ,IAAIA,QAAQ,CAACQ,GAAtB,IAA8B7D,EAAE,CAAC8D,QAAlC,CADb;AAERC,YAAAA,KAAK,EAAE9D,gBAAgB,CAAEoD,QAAQ,IAAIA,QAAQ,CAACU,KAAtB,IAAgC/D,EAAE,CAAC8D,QAApC;AAFf,WATO;AAajBR,UAAAA,KAAK,EAALA;AAbiB,SAAnB;AAeD;AACF;;;iDAOCpB,U,EACA;AAAA,UAFEb,OAEF,SAFEA,OAEF;;AACA,UAAIA,OAAJ,EAAa;AAAA,YAET2B,MAFS,GAmBP3B,OAnBO,CAET2B,MAFS;AAAA,4BAmBP3B,OAnBO,CAGT4B,IAHS;AAAA,YAGTA,IAHS,8BAGF,CAAC,CAHC;AAAA,4BAmBP5B,OAnBO,CAIT6B,IAJS;AAAA,YAITA,IAJS,8BAIF;AACLc,UAAAA,GAAG,EAAEhE,EAAE,CAACiE,MADH;AAELC,UAAAA,GAAG,EAAE,CAFA;AAGLjB,UAAAA,IAAI,EAAE,CAAC;AAHF,SAJE;AAAA,+BAmBP5B,OAnBO,CAST8C,OATS;AAAA,YASTA,OATS,iCASC;AACRC,UAAAA,IAAI,EAAEpE,EAAE,CAACqE,IADD;AAERC,UAAAA,KAAK,EAAEtE,EAAE,CAACqE,IAFF;AAGRE,UAAAA,KAAK,EAAEvE,EAAE,CAACqE;AAHF,SATD;AAAA,8BAmBPhD,OAnBO,CAcTmD,MAdS;AAAA,YAcTA,MAdS,gCAcA;AACPJ,UAAAA,IAAI,EAAEpE,EAAE,CAACqE,IADF;AAEPC,UAAAA,KAAK,EAAEtE,EAAE,CAACqE,IAFH;AAGPE,UAAAA,KAAK,EAAEvE,EAAE,CAACqE;AAHH,SAdA;AAoBXnC,QAAAA,UAAU,CAACb,OAAX,GAAqB;AACnB2B,UAAAA,MAAM,EAAE,CAAC,CAACA,MADS;AAEnBC,UAAAA,IAAI,EAAJA,IAFmB;AAGnBC,UAAAA,IAAI,oBACCA,IADD;AAEFc,YAAAA,GAAG,EAAE1D,cAAc,CAAC4C,IAAI,CAACc,GAAN;AAFjB,YAHe;AAOnBG,UAAAA,OAAO,EAAE;AACPC,YAAAA,IAAI,EAAE7D,YAAY,CAAC4D,OAAO,CAACC,IAAT,CADX;AAEPE,YAAAA,KAAK,EAAE/D,YAAY,CAAC4D,OAAO,CAACG,KAAT,CAFZ;AAGPC,YAAAA,KAAK,EAAEhE,YAAY,CAAC4D,OAAO,CAACI,KAAT;AAHZ,WAPU;AAYnBC,UAAAA,MAAM,EAAE;AACNJ,YAAAA,IAAI,EAAE7D,YAAY,CAACiE,MAAM,CAACJ,IAAR,CADZ;AAENE,YAAAA,KAAK,EAAE/D,YAAY,CAACiE,MAAM,CAACF,KAAR,CAFb;AAGNC,YAAAA,KAAK,EAAEhE,YAAY,CAACiE,MAAM,CAACD,KAAR;AAHb;AAZW,SAArB;AAkBD;AACF;;;8CAOCrC,U,EACA;AAAA,UAFEZ,IAEF,SAFEA,IAEF;;AACA,UAAIA,IAAJ,EAAU;AAAA,YACA0B,MADA,GAC2B1B,IAD3B,CACA0B,MADA;AAAA,yBAC2B1B,IAD3B,CACQmD,IADR;AAAA,YACQA,IADR,2BACezE,EAAE,CAAC0E,IADlB;AAERxC,QAAAA,UAAU,CAACZ,IAAX,GAAkB;AAChB0B,UAAAA,MAAM,EAAE,CAAC,CAACA,MADM;AAEhByB,UAAAA,IAAI,EAAEtE,WAAW,CAACsE,IAAD;AAFD,SAAlB;AAID;AACF;;;oCAOuB7D,Q,EAItB;AAAA;;AACA,UAAM+D,iBAAiB,GAAG,EAA1B;AACAjD,MAAAA,MAAM,CAACC,IAAP,CAAYf,QAAZ,EAAsBgB,OAAtB,CAA8B,UAACC,WAAD,EAAiB;AAC7C,QAAA,KAAI,CAAC+C,0BAAL,CACE/C,WADF,EAEEjB,QAAQ,CAACiB,WAAD,CAFV,EAGE8C,iBAHF,EAIE,EAJF;AAMD,OAPD;AASA,aAAOA,iBAAP;AACD;;;+CAGC9C,W,EACAgD,Y,EACAjE,Q,EAGAkE,M,EACA;AAAA;;AACA,UACED,YAAY,KAAK,IAAjB,IACA,OAAOA,YAAP,KAAwB,QADxB,IAEA,OAAOA,YAAP,KAAwB,SAFxB,IAGChC,KAAK,CAACC,OAAN,CAAc+B,YAAd,KAA+B,OAAOA,YAAY,CAAC,CAAD,CAAnB,KAA2B,QAH3D,IAIA,cAAaA,YAAb,CAJA,IAMAA,YAAY,KAAK,EANjB,IAOA,YAAYA,YARd,EASE;AACAjE,QAAAA,QAAQ,WAAIkE,MAAM,IAAIA,MAAM,GAAG,GAAvB,SAA6BjD,WAA7B,EAAR,GAAsDgD,YAAtD;AACA;AACD;;AAGD,UAAI,eAAcA,YAAd,CAAJ,EAAiC;AAC/BnD,QAAAA,MAAM,CAACC,IAAP,CAAYkD,YAAZ,EAA0BjD,OAA1B,CAAkC,UAACmD,SAAD,EAAe;AAC/C,UAAA,MAAI,CAACH,0BAAL,CACEG,SADF,EAGEF,YAAY,CAACE,SAAD,CAHd,EAIEnE,QAJF,YAKKkE,MAAM,IAAIA,MAAM,GAAG,GALxB,SAK8BjD,WAL9B;AAOD,SARD;AASD;;AAGD,UAAIgB,KAAK,CAACC,OAAN,CAAc+B,YAAd,CAAJ,EAAiC;AAC/BA,QAAAA,YAAY,CAACjD,OAAb,CAAqB,UAACoD,KAAD,EAAQC,GAAR,EAAgB;AACnCvD,UAAAA,MAAM,CAACC,IAAP,CAAYqD,KAAZ,EAAmBpD,OAAnB,CAA2B,UAACmD,SAAD,EAAe;AACxC,YAAA,MAAI,CAACH,0BAAL,CACEG,SADF,EAGEC,KAAK,CAACD,SAAD,CAHP,EAIEnE,QAJF,YAKKkE,MAAM,IAAIA,MAAM,GAAG,GALxB,SAK8BjD,WAL9B,cAK6CoD,GAL7C;AAOD,WARD;AASD,SAVD;AAWD;AACF;;;;;;SAvSkBzE,S","sourcesContent":["import {\n  gl,\n  IModel,\n  IModelDrawOptions,\n  IModelInitializationOptions,\n  IUniform,\n} from '@antv/l7-core';\nimport { isPlainObject, isTypedArray } from 'lodash';\nimport regl from 'regl';\nimport {\n  blendEquationMap,\n  blendFuncMap,\n  cullFaceMap,\n  depthFuncMap,\n  primitiveMap,\n  stencilFuncMap,\n  stencilOpMap,\n} from './constants';\nimport ReglAttribute from './ReglAttribute';\nimport ReglElements from './ReglElements';\nimport ReglFramebuffer from './ReglFramebuffer';\nimport ReglTexture2D from './ReglTexture2D';\n\n/**\n * adaptor for regl.DrawCommand\n */\nexport default class ReglModel implements IModel {\n  private reGl: regl.Regl;\n  private drawCommand: regl.DrawCommand;\n  private uniforms: {\n    [key: string]: IUniform;\n  } = {};\n\n  constructor(reGl: regl.Regl, options: IModelInitializationOptions) {\n    this.reGl = reGl;\n    const {\n      vs,\n      fs,\n      attributes,\n      uniforms,\n      primitive,\n      count,\n      elements,\n      depth,\n      blend,\n      stencil,\n      cull,\n      instances,\n    } = options;\n    const reglUniforms: { [key: string]: IUniform } = {};\n    if (uniforms) {\n      this.uniforms = this.extractUniforms(uniforms);\n      Object.keys(uniforms).forEach((uniformName) => {\n        // use regl prop API\n        // @ts-ignore\n        reglUniforms[uniformName] = reGl.prop(uniformName);\n      });\n    }\n\n    const reglAttributes: { [key: string]: regl.Attribute } = {};\n    Object.keys(attributes).forEach((name: string) => {\n      reglAttributes[name] = (attributes[name] as ReglAttribute).get();\n    });\n    const drawParams: regl.DrawConfig = {\n      attributes: reglAttributes,\n      frag: fs,\n      uniforms: reglUniforms,\n      vert: vs,\n      primitive:\n        primitiveMap[primitive === undefined ? gl.TRIANGLES : primitive],\n    };\n    if (instances) {\n      drawParams.instances = instances;\n    }\n\n    // elements 中可能包含 count，此时不应传入\n    if (count) {\n      drawParams.count = count;\n    }\n\n    if (elements) {\n      drawParams.elements = (elements as ReglElements).get();\n    }\n\n    this.initDepthDrawParams({ depth }, drawParams);\n    this.initBlendDrawParams({ blend }, drawParams);\n    this.initStencilDrawParams({ stencil }, drawParams);\n    this.initCullDrawParams({ cull }, drawParams);\n    this.drawCommand = reGl(drawParams);\n  }\n\n  public addUniforms(uniforms: { [key: string]: IUniform }) {\n    this.uniforms = {\n      ...this.uniforms,\n      ...this.extractUniforms(uniforms),\n    };\n  }\n\n  public draw(options: IModelDrawOptions) {\n    const uniforms: {\n      [key: string]: IUniform;\n    } = {\n      ...this.uniforms,\n      ...this.extractUniforms(options.uniforms || {}),\n    };\n    const reglDrawProps: {\n      [key: string]:\n        | regl.Framebuffer\n        | regl.Texture2D\n        | number\n        | number[]\n        | boolean;\n    } = {};\n\n    Object.keys(uniforms).forEach((uniformName: string) => {\n      const type = typeof uniforms[uniformName];\n      if (\n        type === 'boolean' ||\n        type === 'number' ||\n        Array.isArray(uniforms[uniformName]) ||\n        // @ts-ignore\n        uniforms[uniformName].BYTES_PER_ELEMENT\n      ) {\n        reglDrawProps[uniformName] = uniforms[uniformName] as\n          | number\n          | number[]\n          | boolean;\n      } else {\n        reglDrawProps[uniformName] = (uniforms[uniformName] as\n          | ReglFramebuffer\n          | ReglTexture2D).get();\n      }\n    });\n    this.drawCommand(reglDrawProps);\n  }\n\n  public destroy() {\n    // don't need do anything since we will call `rendererService.cleanup()`\n  }\n\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#depth-buffer\n   */\n  private initDepthDrawParams(\n    { depth }: Pick<IModelInitializationOptions, 'depth'>,\n    drawParams: regl.DrawConfig,\n  ) {\n    if (depth) {\n      drawParams.depth = {\n        enable: depth.enable === undefined ? true : !!depth.enable,\n        mask: depth.mask === undefined ? true : !!depth.mask,\n        func: depthFuncMap[depth.func || gl.LESS],\n        range: depth.range || [0, 1],\n      };\n    }\n  }\n\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#blending\n   */\n  private initBlendDrawParams(\n    { blend }: Pick<IModelInitializationOptions, 'blend'>,\n    drawParams: regl.DrawConfig,\n  ) {\n    if (blend) {\n      const { enable, func, equation, color = [0, 0, 0, 0] } = blend;\n      // @ts-ignore\n      drawParams.blend = {\n        enable: !!enable,\n        func: {\n          srcRGB: blendFuncMap[(func && func.srcRGB) || gl.SRC_ALPHA],\n          srcAlpha: blendFuncMap[(func && func.srcAlpha) || gl.SRC_ALPHA],\n          dstRGB: blendFuncMap[(func && func.dstRGB) || gl.ONE_MINUS_SRC_ALPHA],\n          dstAlpha:\n            blendFuncMap[(func && func.dstAlpha) || gl.ONE_MINUS_SRC_ALPHA],\n        },\n        equation: {\n          rgb: blendEquationMap[(equation && equation.rgb) || gl.FUNC_ADD],\n          alpha: blendEquationMap[(equation && equation.alpha) || gl.FUNC_ADD],\n        },\n        color,\n      };\n    }\n  }\n\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#stencil\n   */\n  private initStencilDrawParams(\n    { stencil }: Pick<IModelInitializationOptions, 'stencil'>,\n    drawParams: regl.DrawConfig,\n  ) {\n    if (stencil) {\n      const {\n        enable,\n        mask = -1,\n        func = {\n          cmp: gl.ALWAYS,\n          ref: 0,\n          mask: -1,\n        },\n        opFront = {\n          fail: gl.KEEP,\n          zfail: gl.KEEP,\n          zpass: gl.KEEP,\n        },\n        opBack = {\n          fail: gl.KEEP,\n          zfail: gl.KEEP,\n          zpass: gl.KEEP,\n        },\n      } = stencil;\n      drawParams.stencil = {\n        enable: !!enable,\n        mask,\n        func: {\n          ...func,\n          cmp: stencilFuncMap[func.cmp],\n        },\n        opFront: {\n          fail: stencilOpMap[opFront.fail],\n          zfail: stencilOpMap[opFront.zfail],\n          zpass: stencilOpMap[opFront.zpass],\n        },\n        opBack: {\n          fail: stencilOpMap[opBack.fail],\n          zfail: stencilOpMap[opBack.zfail],\n          zpass: stencilOpMap[opBack.zpass],\n        },\n      };\n    }\n  }\n\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#culling\n   */\n  private initCullDrawParams(\n    { cull }: Pick<IModelInitializationOptions, 'cull'>,\n    drawParams: regl.DrawConfig,\n  ) {\n    if (cull) {\n      const { enable, face = gl.BACK } = cull;\n      drawParams.cull = {\n        enable: !!enable,\n        face: cullFaceMap[face],\n      };\n    }\n  }\n\n  /**\n   * 考虑结构体命名, eg:\n   * a: { b: 1 }  ->  'a.b'\n   * a: [ { b: 1 } ] -> 'a[0].b'\n   */\n  private extractUniforms(uniforms: {\n    [key: string]: IUniform;\n  }): {\n    [key: string]: IUniform;\n  } {\n    const extractedUniforms = {};\n    Object.keys(uniforms).forEach((uniformName) => {\n      this.extractUniformsRecursively(\n        uniformName,\n        uniforms[uniformName],\n        extractedUniforms,\n        '',\n      );\n    });\n\n    return extractedUniforms;\n  }\n\n  private extractUniformsRecursively(\n    uniformName: string,\n    uniformValue: IUniform,\n    uniforms: {\n      [key: string]: IUniform;\n    },\n    prefix: string,\n  ) {\n    if (\n      uniformValue === null ||\n      typeof uniformValue === 'number' || // u_A: 1\n      typeof uniformValue === 'boolean' || // u_A: false\n      (Array.isArray(uniformValue) && typeof uniformValue[0] === 'number') || // u_A: [1, 2, 3]\n      isTypedArray(uniformValue) || // u_A: Float32Array\n      // @ts-ignore\n      uniformValue === '' ||\n      'resize' in uniformValue\n    ) {\n      uniforms[`${prefix && prefix + '.'}${uniformName}`] = uniformValue;\n      return;\n    }\n\n    // u_Struct.a.b.c\n    if (isPlainObject(uniformValue)) {\n      Object.keys(uniformValue).forEach((childName) => {\n        this.extractUniformsRecursively(\n          childName,\n          // @ts-ignore\n          uniformValue[childName],\n          uniforms,\n          `${prefix && prefix + '.'}${uniformName}`,\n        );\n      });\n    }\n\n    // u_Struct[0].a\n    if (Array.isArray(uniformValue)) {\n      uniformValue.forEach((child, idx) => {\n        Object.keys(child).forEach((childName) => {\n          this.extractUniformsRecursively(\n            childName,\n            // @ts-ignore\n            child[childName],\n            uniforms,\n            `${prefix && prefix + '.'}${uniformName}[${idx}]`,\n          );\n        });\n      });\n    }\n  }\n}\n"],"file":"ReglModel.js"}