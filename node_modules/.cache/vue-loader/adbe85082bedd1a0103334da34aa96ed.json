{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/report/report/report.vue?vue&type=style&index=0&id=88a9e424&scoped=true&lang=css&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/report/report/report.vue","mtime":1586155739821},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.container{\n    width: 500px;\n    height: 500px;\n}\n",{"version":3,"sources":["report.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiTA;AACA;AACA;AACA","file":"report.vue","sourceRoot":"src/views/report/report","sourcesContent":["<template>\n    <div>\n        <Select v-model=\"searchForm.gameid\" style=\"width:200px\">\n            <Option v-for=\"item in games\" :value=\"item.gameid\" :key=\"item.gameid\">{{ item.name }}</Option>\n        </Select>\n        <Row>\n            <Col span=\"12\">\n                <DatePicker v-model=\"time\" type=\"daterange\" format=\"yyyy-MM-dd\" placeholder=\"选择开始时间\"\n                            style=\"width: 200px\"></DatePicker>\n            </Col>\n        </Row>\n        <Button @click=\"download\" type=\"info\">下载</Button>\n        <!-- 创建图表容器 -->\n        <!--        <div id=\"c1\"></div>-->\n        <!--        <Button @click=\"changeAntvData\" type=\"info\">Antv</Button>-->\n<!--        <div style=\"min-height: 500px; justify-content: center;position: relative\" id=\"map\"/>-->\n        <div class=\"container\">\n            <h3>累计确诊人数如下：</h3>\n            <!--为echarts准备一个dom容器-->\n            <div id=\"myEcharts\"></div>\n        </div>\n    </div>\n\n</template>\n\n<script src=\"https://www.echartsjs.com/examples/vendors/jquery/jquery.js\"></script>\n<!-- 引入 echarts.js -->\n<script src=\"https://www.echartsjs.com/examples/vendors/echarts/echarts.min.js?_v_=1578305236132\"></script>\n<!--引入中国的地图数据js文件，引入后会自动注册地图名字和数据-->\n<script src=\"https://www.echartsjs.com/examples/vendors/echarts/map/js/china.js?_v_=1578305236132\"></script>\n\n<script>\n    import {queryAllAdvertReq, downloadReportReq} from '@/api/index';\n    import { Scene, PolygonLayer, LineLayer } from '@antv/l7';\n    import { GaodeMap } from '@antv/l7-maps';\n\n    export default {\n        name: \"report\",\n        data() {\n            return {\n                games: [],\n                searchForm: {\n                    gameid: '',\n                },\n                time: [],\n                data: [\n                    {genre: 'Sports', sold: 275},\n                    {genre: 'Strategy', sold: 115},\n                    {genre: 'Action', sold: 120},\n                    {genre: 'Shooter', sold: 350},\n                    {genre: 'Other', sold: 150}\n                ],\n                chart: {},\n            }\n        },\n        methods: {\n            init() {\n                this.getGames();\n                // this.antvG2Text();\n                this.antvL();\n            },\n            changeAntvData() {\n                const data = [\n                    {genre: 'Sports', sold: 105},\n                    {genre: 'Strategy', sold: 105},\n                    {genre: 'Action', sold: 105},\n                    {genre: 'Shooter', sold: 105},\n                    {genre: 'Other', sold: 105}\n                ]\n                this.chart.changeData(data);\n            },\n            antvG2Text() {\n                this.chart = new G2.Chart({\n                    container: 'c1', // 指定图表容器 ID\n                    width: 600, // 指定图表宽度\n                    height: 300 // 指定图表高度\n                });\n                // Step 2: 载入数据源\n                this.chart.source(this.data);\n                // Step 3：创建图形语法，绘制柱状图，由 genre 和 sold 两个属性决定图形位置，genre 映射至 x 轴，sold 映射至 y 轴\n                this.chart.interval().position('genre*sold').color('genre')\n                // Step 4: 渲染图表\n                this.chart.render();\n            },\n\n            antvL(){\n                const scene = new Scene({\n                    id: 'map',\n                    map: new GaodeMap({\n                        pitch: 0,\n                        style: 'light',\n                        center: [ 107.042225, 37.66565 ],\n                        zoom: 3.87\n                    })\n                });\n                scene.on('loaded', () => {\n                    fetch('https://gw.alipayobjects.com/os/rmsportal/JToMOWvicvJOISZFCkEI.json')\n                        .then(res => res.json())\n                        .then(data => {\n                            debugger\n                            const colors = [\n                                '#D7F9F0',\n                                '#A6E1E0',\n                                '#72BED6',\n                                '#5B8FF9',\n                                '#3474DB',\n                                '#005CBE',\n                                '#00419F',\n                                '#00287E'\n                            ];\n                            const layer = new PolygonLayer({})\n                                .source(data)\n                                .color('name', colors)\n                                .shape('fill')\n                                .active(true)\n                                .style({\n                                    opacity: 0.9\n                                });\n\n                            const layer2 = new LineLayer({\n                                zIndex: 2\n                            })\n                                .source(data)\n                                .color('#fff')\n                                .size(0.3)\n                                .style({\n                                    opacity: 1\n                                });\n\n                            scene.addLayer(layer);\n                            scene.addLayer(layer2);\n                        });\n                });\n            },\n            getGames() {\n                queryAllAdvertReq(this.gameid).then(res => {\n                    if (res.success) {\n                        this.games = res.result[0].records;\n                    }\n                });\n\n                //初始化echarts实例\n                var myChart = echarts.init(document.getElementById('myEcharts'));\n                // 指定图表的配置项和数据\n                option = {\n                    title: {\n                        text: '中国疫情图',\n                        left: 'center'\n                    },\n                    tooltip: {\n                        trigger: 'item'\n                    },\n                    legend: {\n                        orient: 'vertical',\n                        left: 'left',\n                        data: ['中国疫情图']\n                    },\n                    visualMap: {\n                        type: 'piecewise',\n                        pieces: [\n                            { min: 1000, max: 1000000, label: '大于等于1000人', color: '#372a28' },\n                            { min: 500, max: 999, label: '确诊500-999人', color: '#4e160f' },\n                            { min: 100, max: 499, label: '确诊100-499人', color: '#974236' },\n                            { min: 10, max: 99, label: '确诊10-99人', color: '#ee7263' },\n                            { min: 1, max: 9, label: '确诊1-9人', color: '#f5bba7' },\n                        ],\n                        color: ['#E0022B', '#E09107', '#A3E00B']\n                    },\n                    toolbox: {\n                        show: true,\n                        orient: 'vertical',\n                        left: 'right',\n                        top: 'center',\n                        feature: {\n                            mark: { show: true },\n                            dataView: { show: true, readOnly: false },\n                            restore: { show: true },\n                            saveAsImage: { show: true }\n                        }\n                    },\n                    roamController: {\n                        show: true,\n                        left: 'right',\n                        mapTypeControl: {\n                            'china': true\n                        }\n                    },\n                    series: [\n                        {\n                            name: '确诊数',\n                            type: 'map',\n                            mapType: 'china',\n                            roam: false,\n                            label: {\n                                show: true,\n                                color: 'rgb(249, 249, 249)'\n                            },\n                            data: []\n                        }\n                    ]\n                };\n\n                //使用指定的配置项和数据显示图表\n                myChart.setOption(option);\n\n                //获取数据\n                function getData() {\n                    $.ajax({\n                        url: \"https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5\",\n                        dataType: \"jsonp\",\n                        success: function (data) {\n                            //  console.log(data.data)\n                            var res = data.data || \"\";\n                            res = JSON.parse(res);\n                            var newArr = [];\n                            //newArr的数据格式为：\n                            // [{\n                            //   name: '北京11',\n                            //   value: 212\n                            // }, {\n                            //   name: '天津',\n                            //   value: 60\n                            // }]\n                            if (res) {\n                                //获取到各个省份的数据\n                                var province = res.areaTree[0].children;\n                                for (var i = 0; i < province.length; i++) {\n                                    var json = {\n                                        name: province[i].name,\n                                        value: province[i].total.confirm\n                                    }\n                                    newArr.push(json)\n                                }\n                                console.log(newArr)\n                                console.log(JSON.stringify(newArr))\n                                //使用指定的配置项和数据显示图表\n                                myChart.setOption({\n                                    series: [\n                                        {\n                                            name: '确诊数',\n                                            type: 'map',\n                                            mapType: 'china',\n                                            roam: false,\n                                            label: {\n                                                show: true,\n                                                color: 'rgb(249, 249, 249)'\n                                            },\n                                            data: newArr\n                                        }\n                                    ]\n                                });\n                            }\n                        }\n\n                    })\n                }\n                getData();\n\n            },\n            download() {\n                let t = this.time;\n                if (this.searchForm.gameid == '' || undefined) {\n                    alert('请选择游戏');\n                    return;\n                }\n                if (this.time[0] == '') {\n                    alert(\"请输入时间\");\n                    return;\n                }\n                let gameid = this.searchForm.gameid,\n                    beginData = this.timeUtil(this.time[0]),\n                    overData = this.timeUtil(this.time[1]);\n                // let url = `https://report.nuojuekeji.com/api/report/generateReport?startDs=${beginData}&endDs=${overData}&gameId=${gameid}`;\n                window.location.href = `https://report.nuojuekeji.com/api/report/generateReport?startDs=${beginData}&endDs=${overData}&gameId=${gameid}`;\n                //\n                // let url = 'https://report.nuojuekeji.com/api/report/generateReport?startDs=2019-11-18&endDs=2019-12-16&gameId=8';\n                // downloadReportReq(url).then(res => {\n                //     debugger\n                //     // const blob = new Blob([response.data]);\n                //     // const fileName = 'user.xls';\n                //     // const linkNode = document.createElement('a');\n                //     //\n                //     // linkNode.download = fileName; //a标签的download属性规定下载文件的名称\n                //     // linkNode.style.display = 'none';\n                //     // linkNode.href = URL.createObjectURL(blob); //生成一个Blob URL\n                //     // document.body.appendChild(linkNode);\n                //     // linkNode.click();  //模拟在按钮上的一次鼠标单击\n                //     //\n                //     // URL.revokeObjectURL(linkNode.href); // 释放URL 对象\n                //     // document.body.removeChild(linkNode);\n                //\n                // });\n            },\n            timeUtil(time) {\n                return time.getFullYear() + \"-\" + (time.getMonth() + 1) + \"-\" + time.getDate();\n            }\n        }\n        ,\n        mounted() {\n            this.init();\n        }\n    }\n</script>\n\n<style scoped>\n    .container{\n        width: 500px;\n        height: 500px;\n    }\n</style>\n"]}]}