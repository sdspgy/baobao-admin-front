{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/reportData/reportVisit/reportVisit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/reportData/reportVisit/reportVisit.vue","mtime":1585555403593},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryVisit as _queryVisit } from '@/api/index';\nimport { weekChange } from '@/libs/changeWeek';\nexport default {\n  name: \"reportVisit\",\n  data: function data() {\n    return {\n      defaultData: {\n        yestoday: 1,\n        week: 7,\n        month: 30\n      },\n      data: \"7\",\n      value_visitType: {\n        index: 0\n      },\n      defaultVisitType: [{\n        name: 'visits',\n        value: 0\n      }, {\n        name: 'averageVisits',\n        value: 1\n      }, {\n        name: 'averageStayTime',\n        value: 2\n      }],\n      visitType: [{\n        text: '访问次数',\n        value: 0\n      }, {\n        text: '平均访问次数',\n        value: 1\n      }, {\n        text: '平均停留时间',\n        value: 2\n      }],\n      columns: [{\n        title: '日期（星期）',\n        key: 'ds',\n        width: 150,\n        align: 'center',\n        fixed: 'left'\n      }, {\n        title: '访问次数',\n        key: 'visits',\n        width: 150,\n        align: 'center',\n        fixed: 'left'\n      }, {\n        title: '平均访问次数',\n        key: 'averageVisits',\n        width: 150,\n        align: 'center',\n        fixed: 'left'\n      }, {\n        title: '平均停留时间（S）',\n        key: 'averageStayTime',\n        width: 150,\n        align: 'center',\n        fixed: 'left'\n      }],\n      visitG2: {},\n      tableV: [],\n      charts: []\n    };\n  },\n  methods: {\n    init: function init() {\n      this.queryVisit();\n    },\n    queryVisit: function queryVisit() {\n      var that = this;\n      var params = {\n        gameid: parseInt(that.getStore('gameid')),\n        date: parseInt(that.data)\n      };\n\n      _queryVisit(params).then(function (e) {\n        if (e.success) {\n          var visits = e.visitTrendings;\n          visits.forEach(function (item) {\n            item.ds = weekChange(item.ds);\n            item.averageVisits = Number(item.averageVisits).toFixed(2);\n            item.averageStayTime = Number(item.averageStayTime).toFixed(2);\n          });\n          var typeString = '';\n\n          for (var key in that.visitType) {\n            if (that.defaultVisitType[key].value == that.value_visitType.index.toString()) {\n              typeString = that.defaultVisitType[key].name;\n              break;\n            }\n          }\n\n          var charts = [];\n          visits.forEach(function (item) {\n            var chartObject = new Object();\n            chartObject.ds = item.ds.substr(5, 5);\n            chartObject.value = Number(item[typeString]);\n            charts.push(chartObject);\n          });\n          that.tableV = visits;\n          that.charts = charts;\n          that.visitG2.changeData(that.charts);\n        }\n      });\n    },\n    visitG2F: function visitG2F() {\n      this.visitG2 = new G2.Chart({\n        container: 'visitChart',\n        forceFit: true,\n        height: 270\n      });\n      this.visitG2.source(this.charts, {});\n      this.visitG2.scale('value', {\n        min: 0 // alias: '',\n\n      });\n      this.visitG2.scale('ds', {\n        // range: [0, 1]\n        tickCount: 6\n      });\n      this.visitG2.tooltip({\n        crosshairs: {\n          type: 'line'\n        }\n      }); // 坐标轴文本旋转\n\n      this.visitG2.axis('ds', {\n        label: {\n          rotate: -Math.PI / 2.5,\n          textAlign: 'end',\n          textBaseline: 'middle'\n        }\n      });\n      this.visitG2.line().position('ds*value').shape('smooth');\n      this.visitG2.point().position('ds*value').size(4).shape('circle').style({\n        stroke: '#fff',\n        lineWidth: 1\n      }).color('l(0) 0:#1E90FF 0.5:#1E90FF 1:#1E90FF');\n      this.visitG2.area().position('ds*value').shape('smooth');\n      this.visitG2.render();\n    },\n    changeType: function changeType() {\n      this.init();\n    }\n  },\n  mounted: function mounted() {\n    this.visitG2F();\n    this.init();\n  }\n};",{"version":3,"sources":["reportVisit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div style=\"background-color:#fff; height: 1000px\">\n        <!--时间-->\n        <div>\n            <RadioGroup v-model=\"data\" type=\"button\"  @on-change=\"init()\">\n                <Radio style=\"margin: 10px 10px\" label=\"1\">昨天</Radio>\n                <Radio style=\"margin: 10px 10px\" label=\"7\">7日</Radio>\n                <Radio style=\"margin: 10px 10px\" label=\"30\">30日</Radio>\n            </RadioGroup>\n        </div>\n\n        <Row style=\"width: 40%;background-color:#fff; margin-top: 50px;position: absolute\">\n            <Table height=\"330\" highlight-row border :columns=\"columns\" :data=\"tableV\"\n                   ref=\"table\"></Table>\n        </Row>\n\n        <div style=\"position: relative;left: 47%;top: 50px;background-color:#fff;border-radius: 10px 10px 10px 10px;width: 40%\">\n            <!--        类型-->\n            <Form ref=\"from\" class=\"\" :model=\"value_visitType\" :label-width=\"80\">\n                <FormItem label=\"\" prop=\"value\">\n                    <Select v-model=\"value_visitType.index\" style=\"width:200px\"\n                            @on-change=\"changeType()\">\n                        <Option v-for=\"item in visitType\" :value=\"item.value\"\n                                :key=\"item.value\">{{ item.text }}\n                        </Option>\n                    </Select>\n                </FormItem>\n            </Form>\n            <div id=\"visitChart\"></div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {queryVisit} from '@/api/index';\n    import {weekChange} from '@/libs/changeWeek';\n\n    export default {\n        name: \"reportVisit\",\n        data() {\n            return {\n                defaultData: {\n                    yestoday: 1,\n                    week: 7,\n                    month: 30\n                },\n                data: \"7\",\n                value_visitType: {\n                    index: 0\n                },\n                defaultVisitType: [\n                    {\n                        name: 'visits',\n                        value: 0\n                    },\n                    {\n                        name: 'averageVisits',\n                        value: 1,\n                    }, {\n                        name: 'averageStayTime',\n                        value: 2\n                    }\n                ],\n                visitType: [\n                    {\n                        text: '访问次数',\n                        value: 0\n                    },\n                    {\n                        text: '平均访问次数',\n                        value: 1\n                    },\n                    {\n                        text: '平均停留时间',\n                        value: 2\n                    }\n                ],\n                columns: [\n                    {\n                        title: '日期（星期）',\n                        key: 'ds',\n                        width: 150,\n                        align: 'center',\n                        fixed: 'left'\n                    },\n                    {\n                        title: '访问次数',\n                        key: 'visits',\n                        width: 150,\n                        align: 'center',\n                        fixed: 'left'\n                    },\n                    {\n                        title: '平均访问次数',\n                        key: 'averageVisits',\n                        width: 150,\n                        align: 'center',\n                        fixed: 'left'\n                    },\n                    {\n                        title: '平均停留时间（S）',\n                        key: 'averageStayTime',\n                        width: 150,\n                        align: 'center',\n                        fixed: 'left'\n                    },\n                ],\n                visitG2: {},\n                tableV: [],\n                charts: [],\n            }\n        },\n        methods: {\n            init() {\n                this.queryVisit();\n            },\n            queryVisit() {\n                const that = this;\n                let params = {\n                    gameid: parseInt(that.getStore('gameid')),\n                    date: parseInt(that.data)\n                }\n                queryVisit(params).then(e => {\n                    if (e.success) {\n                        let visits = e.visitTrendings;\n                        visits.forEach(item => {\n                            item.ds = weekChange(item.ds);\n                            item.averageVisits = Number(item.averageVisits).toFixed(2);\n                            item.averageStayTime = Number(item.averageStayTime).toFixed(2);\n                        })\n                        let typeString = '';\n                        for (let key in that.visitType) {\n                            if (that.defaultVisitType[key].value == that.value_visitType.index.toString()) {\n                                typeString = that.defaultVisitType[key].name;\n                                break;\n                            }\n                        }\n                        let charts = [];\n                        visits.forEach(item => {\n                            let chartObject = new Object();\n                            chartObject.ds = item.ds.substr(5, 5);\n                            chartObject.value = Number(item[typeString]);\n                            charts.push(chartObject);\n                        })\n                        that.tableV = visits;\n                        that.charts = charts;\n                        that.visitG2.changeData(that.charts);\n                    }\n                })\n            },\n            visitG2F() {\n                this.visitG2 = new G2.Chart({\n                    container: 'visitChart',\n                    forceFit: true,\n                    height: 270\n                });\n                this.visitG2.source(this.charts, {});\n                this.visitG2.scale('value', {\n                    min: 0,\n                    // alias: '',\n                });\n                this.visitG2.scale('ds', {\n                    // range: [0, 1]\n                    tickCount: 6,\n                });\n                this.visitG2.tooltip({\n                    crosshairs: {\n                        type: 'line'\n                    }\n                });\n                // 坐标轴文本旋转\n                this.visitG2.axis('ds', {\n                    label: {\n                        rotate: -Math.PI / 2.5,\n                        textAlign: 'end',\n                        textBaseline: 'middle'\n                    }\n                });\n                this.visitG2.line().position('ds*value').shape('smooth');\n                this.visitG2.point().position('ds*value')\n                    .size(4)\n                    .shape('circle')\n                    .style({\n                        stroke: '#fff',\n                        lineWidth: 1\n                    })\n                    .color('l(0) 0:#1E90FF 0.5:#1E90FF 1:#1E90FF');\n                this.visitG2.area().position('ds*value').shape('smooth');\n                this.visitG2.render();\n            },\n            changeType() {\n                this.init();\n            }\n        },\n        mounted() {\n            this.visitG2F();\n            this.init();\n        }\n        ,\n    }\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/views/reportData/reportVisit"}]}