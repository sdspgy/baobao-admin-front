{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/reportdata/reportVisit/reportVisit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/reportdata/reportVisit/reportVisit.vue","mtime":1590217166228},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryVisit as _queryVisit } from '@/api/index';\nimport { weekChange } from '@/libs/changeWeek';\nexport default {\n  name: \"reportVisit\",\n  data: function data() {\n    return {\n      defaultData: {\n        yestoday: 1,\n        week: 7,\n        month: 30\n      },\n      data: \"7\",\n      value_visitType: {\n        index: 0\n      },\n      defaultVisitType: [{\n        name: 'visits',\n        value: 0\n      }, {\n        name: 'averageVisits',\n        value: 1\n      }, {\n        name: 'averageStayTime',\n        value: 2\n      }],\n      visitType: [{\n        text: '访问次数',\n        value: 0\n      }, {\n        text: '平均访问次数',\n        value: 1\n      }, {\n        text: '平均停留时间',\n        value: 2\n      }],\n      columns: [{\n        title: '日期（星期）',\n        key: 'ds',\n        width: 150,\n        align: 'center',\n        fixed: 'left'\n      }, {\n        title: '访问次数',\n        key: 'visits',\n        width: 150,\n        align: 'center',\n        fixed: 'left'\n      }, {\n        title: '平均访问次数',\n        key: 'averageVisits',\n        width: 150,\n        align: 'center',\n        fixed: 'left'\n      }, {\n        title: '平均停留时间（S）',\n        key: 'averageStayTime',\n        width: 150,\n        align: 'center',\n        fixed: 'left'\n      }],\n      visitG2: {},\n      tableV: [],\n      charts: [],\n      timeSection: [],\n      startTime: 0,\n      overTime: 0,\n      options: {\n        disabledDate: function disabledDate(date) {\n          return date && date.valueOf() >= Date.now() - 86400000;\n        }\n      }\n    };\n  },\n  methods: {\n    dayEvent: function dayEvent() {\n      this.timeSection = [];\n      this.startTime = 0;\n      this.overTime = 0;\n      this.init();\n    },\n    timeSectionEvent: function timeSectionEvent() {\n      var nowTime = new Date();\n      this.overTime = 0;\n      this.startTime = 0;\n\n      if (nowTime - this.timeSection[0] > 0) {\n        this.startTime = parseInt((nowTime - this.timeSection[0]) / (24 * 60 * 60 * 1000));\n      }\n\n      if (nowTime - this.timeSection[1] > 0) {\n        this.overTime = parseInt((nowTime - this.timeSection[1]) / (24 * 60 * 60 * 1000));\n      }\n\n      this.queryVisit();\n    },\n    init: function init() {\n      this.queryVisit();\n    },\n    queryVisit: function queryVisit() {\n      var that = this;\n      var params = {\n        gameid: parseInt(that.getStore('gameid')),\n        date: parseInt(that.data)\n      };\n\n      if (this.startTime !== 0) {\n        params.date = this.startTime;\n        this.data = this.startTime;\n      }\n\n      if (this.overTime !== 0) {\n        params.overTime = this.overTime;\n      }\n\n      _queryVisit(params).then(function (e) {\n        if (e.success) {\n          var visits = e.visitTrendings;\n          visits.reverse();\n          visits.forEach(function (item) {\n            item.ds = weekChange(item.ds);\n            item.averageVisits = Number(item.averageVisits).toFixed(2);\n            item.averageStayTime = Number(item.averageStayTime).toFixed(2);\n          });\n          var typeString = '';\n\n          for (var key in that.visitType) {\n            if (that.defaultVisitType[key].value == that.value_visitType.index.toString()) {\n              typeString = that.defaultVisitType[key].name;\n              break;\n            }\n          }\n\n          var charts = [];\n          visits.forEach(function (item) {\n            var chartObject = new Object();\n            chartObject.ds = item.ds.substr(5, 5);\n            chartObject.value = Number(item[typeString]);\n            charts.push(chartObject);\n          });\n          that.tableV = visits;\n          that.charts = charts;\n          that.visitG2.changeData(that.charts);\n        }\n      });\n    },\n    visitG2F: function visitG2F() {\n      this.visitG2 = new G2.Chart({\n        container: 'visitChart',\n        forceFit: true,\n        height: 270\n      });\n      this.visitG2.source(this.charts, {});\n      this.visitG2.scale('value', {\n        min: 0 // alias: '',\n\n      });\n      this.visitG2.scale('ds', {\n        // range: [0, 1]\n        tickCount: 6\n      });\n      this.visitG2.tooltip({\n        crosshairs: {\n          type: 'line'\n        }\n      }); // 坐标轴文本旋转\n\n      this.visitG2.axis('ds', {\n        label: {\n          rotate: -Math.PI / 2.5,\n          textAlign: 'end',\n          textBaseline: 'middle'\n        }\n      });\n      this.visitG2.line().position('ds*value').shape('smooth');\n      this.visitG2.point().position('ds*value').size(4).shape('circle').style({\n        stroke: '#fff',\n        lineWidth: 1\n      }).color('l(0) 0:#1E90FF 0.5:#1E90FF 1:#1E90FF');\n      this.visitG2.area().position('ds*value').shape('smooth');\n      this.visitG2.render();\n    },\n    changeType: function changeType() {\n      this.init();\n    }\n  },\n  mounted: function mounted() {\n    this.visitG2F();\n    this.init();\n  }\n};",null]}