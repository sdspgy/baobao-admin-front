{"version":3,"sources":["../../src/regl/ReglTexture2D.ts"],"names":["ReglTexture2D","reGl","options","texture","data","type","gl","UNSIGNED_BYTE","width","height","flipY","format","RGBA","mipmap","wrapS","CLAMP_TO_EDGE","wrapT","aniso","alignment","premultiplyAlpha","mag","NEAREST","min","colorSpace","BROWSER_DEFAULT_WEBGL","textureOptions","dataTypeMap","formatMap","wrapModeMap","filterMap","colorSpaceMap","mipmapMap","resize","destroy"],"mappings":"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","sourcesContent":["import { gl, ITexture2D, ITexture2DInitializationOptions } from '@antv/l7-core';\nimport regl from 'regl';\nimport {\n  colorSpaceMap,\n  dataTypeMap,\n  filterMap,\n  formatMap,\n  mipmapMap,\n  wrapModeMap,\n} from './constants';\n\n/**\n * adaptor for regl.Buffer\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#buffers\n */\nexport default class ReglTexture2D implements ITexture2D {\n  private texture: regl.Texture2D;\n\n  constructor(reGl: regl.Regl, options: ITexture2DInitializationOptions) {\n    const {\n      data,\n      type = gl.UNSIGNED_BYTE,\n      width,\n      height,\n      flipY = false,\n      format = gl.RGBA,\n      mipmap = false,\n      wrapS = gl.CLAMP_TO_EDGE,\n      wrapT = gl.CLAMP_TO_EDGE,\n      aniso = 0,\n      alignment = 1,\n      premultiplyAlpha = false,\n      mag = gl.NEAREST,\n      min = gl.NEAREST,\n      colorSpace = gl.BROWSER_DEFAULT_WEBGL,\n    } = options;\n\n    const textureOptions: regl.Texture2DOptions = {\n      width,\n      height,\n      // @ts-ignore\n      type: dataTypeMap[type],\n      format: formatMap[format],\n      wrapS: wrapModeMap[wrapS],\n      wrapT: wrapModeMap[wrapT],\n      // @ts-ignore\n      mag: filterMap[mag],\n      min: filterMap[min],\n      alignment,\n      flipY,\n      colorSpace: colorSpaceMap[colorSpace],\n      premultiplyAlpha,\n      aniso,\n    };\n\n    if (data) {\n      textureOptions.data = data;\n    }\n\n    if (typeof mipmap === 'number') {\n      textureOptions.mipmap = mipmapMap[mipmap];\n    } else if (typeof mipmap === 'boolean') {\n      textureOptions.mipmap = mipmap;\n    }\n\n    this.texture = reGl.texture(textureOptions);\n  }\n\n  public get() {\n    return this.texture;\n  }\n\n  public resize({ width, height }: { width: number; height: number }): void {\n    this.texture.resize(width, height);\n  }\n\n  public destroy() {\n    this.texture.destroy();\n  }\n}\n"],"file":"ReglTexture2D.js"}