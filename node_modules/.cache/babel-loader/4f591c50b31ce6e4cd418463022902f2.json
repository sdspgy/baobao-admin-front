{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/reportData/reportLevel/reportLevel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/reportData/reportLevel/reportLevel.vue","mtime":1585732847411},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryLevel as _queryLevel } from '@/api/index';\nimport { weekChange } from '@/libs/changeWeek';\nimport vTitleHead from '../../game/template/TitleHead';\nexport default {\n  name: \"reportLevel\",\n  components: {\n    vTitleHead: vTitleHead\n  },\n  data: function data() {\n    return {\n      LevelLoading: true,\n      isShowCondition: false,\n      levelTable: '等级分布',\n      levelTableSum: '聚合等级分布',\n      levelChart: '等级分布',\n      defaultPhone: {\n        all: 0,\n        android: 1,\n        ios: 2\n      },\n      defaultData: {\n        yestoday: 1,\n        week: 7,\n        month: 30\n      },\n      phone: \"0\",\n      data: \"7\",\n      option_levelType: [{\n        text: '活跃等级分布',\n        value: 0\n      }, {\n        text: '注册等级分布',\n        value: 1\n      }, {\n        text: '付费等级分布',\n        value: 2\n      }, {\n        text: '新付费等级分布',\n        value: 3\n      }, {\n        text: '新注册付费等级分布',\n        value: 4\n      }],\n      levelType: {\n        dau_level: 0,\n        install_level: 1,\n        pay_level: 2,\n        new_pay_level: 3,\n        pay_install_level: 4\n      },\n      reportLevelForm: {\n        index: 0\n      },\n      columnsHeadr: [{\n        title: '日期（星期）',\n        key: 'ds',\n        width: 150,\n        align: 'center',\n        fixed: 'left'\n      }],\n      columsOs: [{\n        title: '操作系统',\n        key: 'os',\n        width: 150,\n        align: 'center',\n        fixed: 'left'\n      }],\n      columsLevel: [],\n      columsLevelSum: [],\n      dauLevelData: [],\n      dauLevelDataSum: [],\n      chartArr: [],\n      levelG2: {}\n    };\n  },\n  methods: {\n    enter: function enter() {\n      this.isShowCondition = true;\n    },\n    leave: function leave() {\n      this.isShowCondition = false;\n    },\n    init: function init() {\n      this.LevelLoading = true;\n      this.queryLevel();\n    },\n    changeType: function changeType() {\n      this.LevelLoading = true;\n      this.queryLevel();\n    },\n    queryLevel: function queryLevel() {\n      var _this = this;\n\n      var params = {\n        gameid: parseInt(this.getStore('gameid')),\n        date: parseInt(this.data),\n        levelType: parseInt(this.reportLevelForm.index),\n        os: this.phone\n      };\n\n      _queryLevel(params).then(function (e) {\n        _this.LevelLoading = false;\n\n        if (e.success) {\n          var dauLevel = e.levelDau;\n          var dauLevelSum = e.levelDauSum; //最大等级-----------\n\n          if (dauLevel && dauLevelSum) {\n            (function () {\n              var maxLevel = 0;\n              var dauLevelKeys = Object.keys(dauLevel).sort(function (o1, o2) {\n                if (o1 < o2) {\n                  return 1;\n                } else if (o1 > o2) {\n                  return -1;\n                } else {\n                  return 0;\n                }\n              });\n\n              if (Object.keys(dauLevel).length > 0 && Object.keys(dauLevelSum).length > 0) {\n                var maxDate = dauLevelKeys[0];\n                var maxDauLevel = dauLevel[maxDate];\n                maxLevel = maxDauLevel[maxDauLevel.length - 1].level;\n              } // 处理表头-----------\n\n\n              var titleLevel = [];\n\n              for (var i = 1; i <= maxLevel; i++) {\n                var dauLevelTitle = new Object();\n                dauLevelTitle.title = i + '级';\n                dauLevelTitle.key = i + 'level';\n                dauLevelTitle.width = 80;\n                dauLevelTitle.align = 'center';\n                titleLevel.push(dauLevelTitle);\n              }\n\n              var dauLevels = [],\n                  dauLevelSuns = [];\n\n              var _loop = function _loop(key) {\n                var dauLevelObj = {};\n                dauLevelObj.ds = weekChange(dauLevel[key][0].ds);\n                dauLevelObj.os = weekChange(dauLevel[key][0].os);\n\n                for (var _i2 = 1; _i2 <= maxLevel; _i2++) {\n                  dauLevelObj[_i2 + 'level'] = 0;\n                }\n\n                dauLevel[key].forEach(function (item) {\n                  if (_this.reportLevelForm.index == _this.levelType.dau_level) {\n                    dauLevelObj[item.level + 'level'] = item.dauNum == 0 ? 0 : (item.dauLevelNumbers / item.dauNum * 100).toFixed(2);\n                  } else if (_this.reportLevelForm.index == _this.levelType.install_level) {\n                    dauLevelObj[item.level + 'level'] = item.installNum == 0 ? 0 : (item.installLevelNumbers / item.installNum * 100).toFixed(2);\n                  } else if (_this.reportLevelForm.index == _this.levelType.pay_level) {\n                    dauLevelObj[item.level + 'level'] = item.payCount == 0 ? 0 : (item.payLevelNumbers / item.payCount * 100).toFixed(2);\n                  } else if (_this.reportLevelForm.index == _this.levelType.new_pay_level) {\n                    dauLevelObj[item.level + 'level'] = item.newPayCount == 0 ? 0 : (item.newPayLevelNumbers / item.newPayCount * 100).toFixed(2);\n                  } else if (_this.reportLevelForm.index == _this.levelType.pay_install_level) {\n                    dauLevelObj[item.level + 'level'] = item.payInstallCount == 0 ? 0 : (item.payInstallLevelNumbers / item.payInstallCount * 100).toFixed(2);\n                  }\n                });\n                dauLevels.push(dauLevelObj);\n              };\n\n              for (var key in dauLevel) {\n                _loop(key);\n              } //聚合数据----------\n\n\n              var dauLevelSumTitleNum = Math.ceil(maxLevel / 10);\n              var chartArr = [];\n              var titleLevelSum = [];\n\n              for (var _i = 1; _i <= dauLevelSumTitleNum; _i++) {\n                var dauLevelSumTitle = new Object();\n                dauLevelSumTitle[_i * 10 + 'level'] = _i * 10 - 9 + \"~\" + _i * 10 + '级';\n                dauLevelSumTitle.title = _i * 10 - 9 + \"~\" + _i * 10 + '级';\n                dauLevelSumTitle.key = _i * 10 + 'level';\n                dauLevelSumTitle.width = 100;\n                dauLevelSumTitle.align = 'center';\n                titleLevelSum.push(dauLevelSumTitle);\n              }\n\n              var _loop2 = function _loop2(_key) {\n                var dauLevelSumObject = {};\n                dauLevelSumObject.ds = weekChange(dauLevelSum[_key][0].ds);\n                dauLevelSumObject.os = weekChange(dauLevelSum[_key][0].os);\n\n                dauLevelSum[_key].forEach(function (item, index) {\n                  //层叠柱状图data处理\n                  var chartObj = new Object();\n                  chartObj.name = (index + 1) * 10 - 9 + \"~\" + (index + 1) * 10 + '级';\n                  chartObj.time = _key.substr(5, 5);\n\n                  if (_this.reportLevelForm.index == _this.levelType.dau_level) {\n                    dauLevelSumObject[(index + 1) * 10 + 'level'] = item.dauNum == 0 ? 0 : (item.dauLevelNumbers / item.dauNum * 100).toFixed(2);\n                    chartObj.value = item.dauNum == 0 ? 0 : parseFloat((item.dauLevelNumbers / item.dauNum * 100).toFixed(2));\n                  } else if (_this.reportLevelForm.index == _this.levelType.install_level) {\n                    dauLevelSumObject[(index + 1) * 10 + 'level'] = item.dauNum == 0 ? 0 : (item.dauLevelNumbers / item.installNum * 100).toFixed(2);\n                    chartObj.value = item.dauNum == 0 ? 0 : parseFloat((item.dauLevelNumbers / item.installNum * 100).toFixed(2));\n                  } else if (_this.reportLevelForm.index == _this.levelType.pay_level) {\n                    dauLevelSumObject[(index + 1) * 10 + 'level'] = item.dauNum == 0 ? 0 : (item.dauLevelNumbers / item.payCount * 100).toFixed(2);\n                    chartObj.value = item.dauNum == 0 ? 0 : parseFloat((item.dauLevelNumbers / item.payCount * 100).toFixed(2));\n                  } else if (_this.reportLevelForm.index == _this.levelType.new_pay_level) {\n                    dauLevelSumObject[(index + 1) * 10 + 'level'] = item.dauNum == 0 ? 0 : (item.dauLevelNumbers / item.newPayCount * 100).toFixed(2);\n                    chartObj.value = item.dauNum == 0 ? 0 : parseFloat((item.dauLevelNumbers / item.newPayCount * 100).toFixed(2));\n                  } else if (_this.reportLevelForm.index == _this.levelType.pay_install_level) {\n                    dauLevelSumObject[(index + 1) * 10 + 'level'] = item.dauNum == 0 ? 0 : (item.dauLevelNumbers / item.payInstallCount * 100).toFixed(2);\n                    chartObj.value = item.dauNum == 0 ? 0 : parseFloat((item.dauLevelNumbers / item.payInstallCount * 100).toFixed(2));\n                  }\n\n                  chartArr.push(chartObj);\n                });\n\n                dauLevelSuns.push(dauLevelSumObject);\n              };\n\n              for (var _key in dauLevelSum) {\n                _loop2(_key);\n              }\n\n              chartArr.sort(function (a, b) {\n                if (a.time < b.time) {\n                  return -1;\n                } else if (a.time > b.time) {\n                  return 1;\n                } else {\n                  return 0;\n                }\n              });\n              dauLevels.sort(function (obj1, obj2) {\n                var val1 = obj1.ds;\n                var val2 = obj2.ds;\n\n                if (val1 < val2) {\n                  return 1;\n                } else if (val1 > val2) {\n                  return -1;\n                } else {\n                  return 0;\n                }\n              });\n              dauLevelSuns.sort(function (obj1, obj2) {\n                var val1 = obj1.ds;\n                var val2 = obj2.ds;\n\n                if (val1 < val2) {\n                  return 1;\n                } else if (val1 > val2) {\n                  return -1;\n                } else {\n                  return 0;\n                }\n              });\n\n              if (_this.phone == _this.defaultPhone.android || _this.phone == _this.defaultPhone.ios) {\n                _this.columsLevel = _this.columnsHeadr.concat(_this.columsOs).concat(titleLevel);\n                _this.columsLevelSum = _this.columnsHeadr.concat(_this.columsOs).concat(titleLevelSum);\n              } else {\n                _this.columsLevel = _this.columnsHeadr.concat(titleLevel);\n                _this.columsLevelSum = _this.columnsHeadr.concat(titleLevelSum);\n              }\n\n              _this.dauLevelData = dauLevels;\n              _this.dauLevelDataSum = dauLevelSuns;\n              _this.chartArr = chartArr;\n            })();\n          }\n\n          _this.levelG2.changeData(_this.chartArr);\n        }\n      });\n    },\n    levelCharts: function levelCharts() {\n      this.levelG2 = new G2.Chart({\n        container: 'levelChart',\n        forceFit: true,\n        height: 500\n      });\n      this.levelG2.source(this.chartArr, {\n        value: {\n          min: 0,\n          formatter: function formatter(val) {\n            return val + '%';\n          }\n        }\n      });\n      this.levelG2.axis('time', {\n        label: {\n          rotate: -Math.PI / 2.5,\n          textAlign: 'end',\n          textBaseline: 'middle'\n        }\n      });\n      this.levelG2.intervalStack().position('time*value').color('name').adjust('stack').shape('text');\n      this.levelG2.render();\n    },\n    compares: function compares(obj1, obj2) {\n      var val1 = obj1.ds;\n      var val2 = obj2.ds;\n\n      if (val1 < val2) {\n        return 1;\n      } else if (val1 > val2) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.levelCharts();\n    this.init();\n  }\n};",{"version":3,"sources":["reportLevel.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div style=\"background-color:#fff;\">\n        <div>\n            <RadioGroup v-model=\"phone\" type=\"button\" @on-change=\"init()\">>\n                <Radio style=\"margin: 10px 10px\" label=\"0\"> ALL</Radio>\n                <Radio style=\"margin: 10px 10px\" label=\"1\">ANDROID</Radio>\n                <Radio style=\"margin: 10px 10px\" label=\"2\">IOS</Radio>\n            </RadioGroup>\n        </div>\n        <div>\n            <RadioGroup v-model=\"data\" type=\"button\" @on-change=\"init()\">>\n                <Radio style=\"margin: 10px 10px\" label=\"1\">昨天</Radio>\n                <Radio style=\"margin: 10px 10px\" label=\"7\">7日</Radio>\n                <Radio style=\"margin: 10px 10px\" label=\"30\">30日</Radio>\n            </RadioGroup>\n        </div>\n        <!--类型-->\n        <Form style=\"margin-left: -80px;position: absolute;top:120px;left: 15%;z-index: 999\" ref=\"from\" class=\"\"\n              :model=\"reportLevelForm\" :label-width=\"80\">\n            <FormItem label=\"\" prop=\"value\">\n                <Select v-model=\"reportLevelForm.index\" style=\"width:200px\"\n                        @on-change=\"changeType()\">\n                    <Option v-for=\"item in option_levelType\" :value=\"item.value\"\n                            :key=\"item.value\">{{ item.text }}\n                    </Option>\n                </Select>\n            </FormItem>\n        </Form>\n\n        <!--        &lt;!&ndash;OS&ndash;&gt;-->\n        <!--        <div @mouseleave=\"leave()\" style=\"width: 45px\" class=\"conditionHead\">-->\n        <!--            <div style=\"width: 45px;height: 35px;\" class=\"smillPeople\"-->\n        <!--                 @mouseenter=\"enter\"></div>-->\n        <!--            <div v-show=\"isShowCondition\"-->\n        <!--                 style=\"width: 270px;height: 150px;background-color:#EAEAEA;z-index: 999;opacity: 0.9;border-radius: 10px 10px 10px 10px;\">-->\n        <!--               -->\n        <!--            </div>-->\n        <!--        </div>-->\n\n        <!--        <div style=\"position: absolute;width: 47%;\">-->\n        <div>\n            <vTitleHead :inputName=\"levelTable\"></vTitleHead>\n            <Row>\n                <Table  :loading=\"LevelLoading\" height=\"440\" highlight-row border :columns=\"columsLevel\" :data=\"dauLevelData\"\n                       ref=\"table\"></Table>\n            </Row>\n        </div>\n\n        <!--        <div style=\"position: relative;left: 50%;top: 0;width: 47%\">-->\n        <div>\n            <vTitleHead :inputName=\"levelTableSum\"></vTitleHead>\n            <Row>\n                <Table  :loading=\"LevelLoading\"  height=\"440\" highlight-row border :columns=\"columsLevelSum\" :data=\"dauLevelDataSum\"\n                       ref=\"table\"></Table>\n            </Row>\n        </div>\n\n        <div style=\"margin-top: 20px\">\n            <vTitleHead :inputName=\"levelChart\"></vTitleHead>\n            <div style=\"background-color:#fff; border-radius: 0 0 10px 10px\" id=\"levelChart\"/>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import {queryLevel} from '@/api/index';\n    import {weekChange} from '@/libs/changeWeek';\n    import vTitleHead from '../../game/template/TitleHead';\n\n    export default {\n        name: \"reportLevel\",\n        components: {vTitleHead},\n        data() {\n            return {\n                LevelLoading:true,\n                isShowCondition: false,\n                levelTable: '等级分布',\n                levelTableSum: '聚合等级分布',\n                levelChart: '等级分布',\n                defaultPhone: {\n                    all: 0,\n                    android: 1,\n                    ios: 2\n                },\n                defaultData: {\n                    yestoday: 1,\n                    week: 7,\n                    month: 30\n                },\n                phone: \"0\",\n                data: \"7\",\n                option_levelType: [\n                    {\n                        text: '活跃等级分布',\n                        value: 0\n                    },\n                    {\n                        text: '注册等级分布',\n                        value: 1\n                    },\n                    {\n                        text: '付费等级分布',\n                        value: 2\n                    },\n                    {\n                        text: '新付费等级分布',\n                        value: 3\n                    },\n                    {\n                        text: '新注册付费等级分布',\n                        value: 4\n                    },\n                ],\n                levelType: {\n                    dau_level: 0,\n                    install_level: 1,\n                    pay_level: 2,\n                    new_pay_level: 3,\n                    pay_install_level: 4\n                },\n                reportLevelForm: {\n                    index: 0\n                },\n                columnsHeadr: [\n                    {\n                        title: '日期（星期）',\n                        key: 'ds',\n                        width: 150,\n                        align: 'center',\n                        fixed: 'left'\n                    }\n                ],\n                columsOs: [\n                    {\n                        title: '操作系统',\n                        key: 'os',\n                        width: 150,\n                        align: 'center',\n                        fixed: 'left'\n                    }\n                ],\n                columsLevel: [],\n                columsLevelSum: [],\n                dauLevelData: [],\n                dauLevelDataSum: [],\n                chartArr: [],\n\n                levelG2: {},\n            }\n        },\n        methods: {\n            enter() {\n                this.isShowCondition = true;\n            },\n            leave() {\n                this.isShowCondition = false;\n            },\n            init() {\n                this.LevelLoading = true;\n                this.queryLevel();\n            },\n            changeType() {\n                this.LevelLoading = true;\n                this.queryLevel();\n            },\n            queryLevel() {\n                let params = {\n                    gameid: parseInt(this.getStore('gameid')),\n                    date: parseInt(this.data),\n                    levelType: parseInt(this.reportLevelForm.index),\n                    os: this.phone\n                }\n                queryLevel(params).then(e => {\n                    this.LevelLoading = false;\n                    if (e.success) {\n                        const dauLevel = e.levelDau;\n                        const dauLevelSum = e.levelDauSum;\n\n                        //最大等级-----------\n                        if (dauLevel && dauLevelSum) {\n                            let maxLevel = 0;\n                            let dauLevelKeys = Object.keys(dauLevel).sort(function (o1, o2) {\n                                if (o1 < o2) {\n                                    return 1;\n                                } else if (o1 > o2) {\n                                    return -1;\n                                } else {\n                                    return 0;\n                                }\n                            });\n                            if (Object.keys(dauLevel).length > 0 && Object.keys(dauLevelSum).length > 0) {\n                                let maxDate = dauLevelKeys[0];\n                                let maxDauLevel = dauLevel[maxDate];\n                                maxLevel = maxDauLevel[maxDauLevel.length - 1].level;\n                            }\n\n                            // 处理表头-----------\n                            let titleLevel = [];\n                            for (let i = 1; i <= maxLevel; i++) {\n                                let dauLevelTitle = new Object();\n                                dauLevelTitle.title = i + '级';\n                                dauLevelTitle.key = i + 'level';\n                                dauLevelTitle.width = 80;\n                                dauLevelTitle.align = 'center';\n                                titleLevel.push(dauLevelTitle);\n                            }\n\n                            let dauLevels = [],\n                                dauLevelSuns = [];\n                            for (let key in dauLevel) {\n                                let dauLevelObj = {};\n                                dauLevelObj.ds = weekChange(dauLevel[key][0].ds);\n                                dauLevelObj.os = weekChange(dauLevel[key][0].os);\n                                for (let i = 1; i <= maxLevel; i++) {\n                                    dauLevelObj[i + 'level'] = 0;\n                                }\n                                dauLevel[key].forEach(item => {\n                                    if (this.reportLevelForm.index == this.levelType.dau_level) {\n                                        dauLevelObj[item.level + 'level'] = item.dauNum == 0 ? 0 : (item.dauLevelNumbers / item.dauNum * 100).toFixed(2);\n                                    } else if (this.reportLevelForm.index == this.levelType.install_level) {\n                                        dauLevelObj[item.level + 'level'] = item.installNum == 0 ? 0 : (item.installLevelNumbers / item.installNum * 100).toFixed(2);\n                                    } else if (this.reportLevelForm.index == this.levelType.pay_level) {\n                                        dauLevelObj[item.level + 'level'] = item.payCount == 0 ? 0 : (item.payLevelNumbers / item.payCount * 100).toFixed(2);\n                                    } else if (this.reportLevelForm.index == this.levelType.new_pay_level) {\n                                        dauLevelObj[item.level + 'level'] = item.newPayCount == 0 ? 0 : (item.newPayLevelNumbers / item.newPayCount * 100).toFixed(2);\n                                    } else if (this.reportLevelForm.index == this.levelType.pay_install_level) {\n                                        dauLevelObj[item.level + 'level'] = item.payInstallCount == 0 ? 0 : (item.payInstallLevelNumbers / item.payInstallCount * 100).toFixed(2);\n                                    }\n                                })\n                                dauLevels.push(dauLevelObj);\n                            }\n                            //聚合数据----------\n                            let dauLevelSumTitleNum = Math.ceil(maxLevel / 10);\n                            let chartArr = [];\n                            let titleLevelSum = [];\n                            for (let i = 1; i <= dauLevelSumTitleNum; i++) {\n                                let dauLevelSumTitle = new Object();\n                                dauLevelSumTitle[i * 10 + 'level'] = (i * 10 - 9) + \"~\" + i * 10 + '级';\n                                dauLevelSumTitle.title = (i * 10 - 9) + \"~\" + i * 10 + '级';\n                                dauLevelSumTitle.key = i * 10 + 'level';\n                                dauLevelSumTitle.width = 100;\n                                dauLevelSumTitle.align = 'center';\n                                titleLevelSum.push(dauLevelSumTitle);\n                            }\n\n                            for (let key in dauLevelSum) {\n                                let dauLevelSumObject = {};\n                                dauLevelSumObject.ds = weekChange(dauLevelSum[key][0].ds);\n                                dauLevelSumObject.os = weekChange(dauLevelSum[key][0].os);\n                                dauLevelSum[key].forEach((item, index) => {\n                                    //层叠柱状图data处理\n                                    let chartObj = new Object();\n                                    chartObj.name = ((index + 1) * 10 - 9) + \"~\" + (index + 1) * 10 + '级';\n                                    chartObj.time = key.substr(5, 5);\n\n                                    if (this.reportLevelForm.index == this.levelType.dau_level) {\n                                        dauLevelSumObject[(index + 1) * 10 + 'level'] = item.dauNum == 0 ? 0 : (item.dauLevelNumbers / item.dauNum * 100).toFixed(2);\n                                        chartObj.value = item.dauNum == 0 ? 0 : parseFloat((item.dauLevelNumbers / item.dauNum * 100).toFixed(2));\n                                    } else if (this.reportLevelForm.index == this.levelType.install_level) {\n                                        dauLevelSumObject[(index + 1) * 10 + 'level'] = item.dauNum == 0 ? 0 : (item.dauLevelNumbers / item.installNum * 100).toFixed(2);\n                                        chartObj.value = item.dauNum == 0 ? 0 : parseFloat((item.dauLevelNumbers / item.installNum * 100).toFixed(2));\n                                    } else if (this.reportLevelForm.index == this.levelType.pay_level) {\n                                        dauLevelSumObject[(index + 1) * 10 + 'level'] = item.dauNum == 0 ? 0 : (item.dauLevelNumbers / item.payCount * 100).toFixed(2);\n                                        chartObj.value = item.dauNum == 0 ? 0 : parseFloat((item.dauLevelNumbers / item.payCount * 100).toFixed(2));\n                                    } else if (this.reportLevelForm.index == this.levelType.new_pay_level) {\n                                        dauLevelSumObject[(index + 1) * 10 + 'level'] = item.dauNum == 0 ? 0 : (item.dauLevelNumbers / item.newPayCount * 100).toFixed(2);\n                                        chartObj.value = item.dauNum == 0 ? 0 : parseFloat((item.dauLevelNumbers / item.newPayCount * 100).toFixed(2));\n                                    } else if (this.reportLevelForm.index == this.levelType.pay_install_level) {\n                                        dauLevelSumObject[(index + 1) * 10 + 'level'] = item.dauNum == 0 ? 0 : (item.dauLevelNumbers / item.payInstallCount * 100).toFixed(2);\n                                        chartObj.value = item.dauNum == 0 ? 0 : parseFloat((item.dauLevelNumbers / item.payInstallCount * 100).toFixed(2));\n                                    }\n\n\n                                    chartArr.push(chartObj);\n                                })\n                                dauLevelSuns.push(dauLevelSumObject);\n                            }\n                            chartArr.sort(function (a, b) {\n                                if (a.time < b.time) {\n                                    return -1;\n                                } else if (a.time > b.time) {\n                                    return 1;\n                                } else {\n                                    return 0;\n                                }\n                            })\n                            dauLevels.sort(function (obj1, obj2) {\n                                var val1 = obj1.ds;\n                                var val2 = obj2.ds;\n                                if (val1 < val2) {\n                                    return 1;\n                                } else if (val1 > val2) {\n                                    return -1;\n                                } else {\n                                    return 0;\n                                }\n                            });\n                            dauLevelSuns.sort(function (obj1, obj2) {\n                                var val1 = obj1.ds;\n                                var val2 = obj2.ds;\n                                if (val1 < val2) {\n                                    return 1;\n                                } else if (val1 > val2) {\n                                    return -1;\n                                } else {\n                                    return 0;\n                                }\n                            });\n                            if (this.phone == this.defaultPhone.android || this.phone == this.defaultPhone.ios) {\n                                this.columsLevel = this.columnsHeadr.concat(this.columsOs).concat(titleLevel);\n                                this.columsLevelSum = this.columnsHeadr.concat(this.columsOs).concat(titleLevelSum);\n                            } else {\n                                this.columsLevel = this.columnsHeadr.concat(titleLevel);\n                                this.columsLevelSum = this.columnsHeadr.concat(titleLevelSum);\n                            }\n                            this.dauLevelData = dauLevels;\n                            this.dauLevelDataSum = dauLevelSuns;\n                            this.chartArr = chartArr;\n                        }\n                        this.levelG2.changeData(this.chartArr);\n                    }\n                })\n            },\n\n            levelCharts() {\n                this.levelG2 = new G2.Chart({\n                    container: 'levelChart',\n                    forceFit: true,\n                    height: 500\n                });\n                this.levelG2.source(this.chartArr, {\n                    value: {\n                        min: 0,\n                        formatter(val) {\n                            return val + '%';\n                        }\n                    }\n                });\n                this.levelG2.axis('time', {\n                    label: {\n                        rotate: -Math.PI / 2.5,\n                        textAlign: 'end',\n                        textBaseline: 'middle'\n                    }\n                });\n                this.levelG2.intervalStack()\n                    .position('time*value')\n                    .color('name').adjust('stack').shape('text');\n                this.levelG2.render();\n            },\n            compares: function (obj1, obj2) {\n                var val1 = obj1.ds;\n                var val2 = obj2.ds;\n                if (val1 < val2) {\n                    return 1;\n                } else if (val1 > val2) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n            },\n        },\n        mounted() {\n            this.levelCharts();\n            this.init();\n        },\n    }\n</script>\n\n<style scoped>\n    .conditionHead {\n        position: fixed;\n        left: 35%;\n        top: 120px;\n        z-index: 999;\n    }\n\n    .smillPeople {\n        width: 45px;\n        height: 35px;\n        background-image: url(../../../assets/smillPeople.jpg);\n        background-size: 300px 35px;\n        animation: walk1 1s steps(7) infinite;\n    }\n\n    @keyframes walk1 {\n        0% {\n            background-position: 0;\n        }\n\n        100% {\n            background-position: 300px;\n        }\n    }\n</style>\n"],"sourceRoot":"src/views/reportData/reportLevel"}]}