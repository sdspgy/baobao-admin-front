{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/reportdata/reportLevel/reportLevel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/reportdata/reportLevel/reportLevel.vue","mtime":1585732847411},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryLevel as _queryLevel } from '@/api/index';\nimport { weekChange } from '@/libs/changeWeek';\nimport vTitleHead from '../../game/template/TitleHead';\nexport default {\n  name: \"reportLevel\",\n  components: {\n    vTitleHead: vTitleHead\n  },\n  data: function data() {\n    return {\n      LevelLoading: true,\n      isShowCondition: false,\n      levelTable: '等级分布',\n      levelTableSum: '聚合等级分布',\n      levelChart: '等级分布',\n      defaultPhone: {\n        all: 0,\n        android: 1,\n        ios: 2\n      },\n      defaultData: {\n        yestoday: 1,\n        week: 7,\n        month: 30\n      },\n      phone: \"0\",\n      data: \"7\",\n      option_levelType: [{\n        text: '活跃等级分布',\n        value: 0\n      }, {\n        text: '注册等级分布',\n        value: 1\n      }, {\n        text: '付费等级分布',\n        value: 2\n      }, {\n        text: '新付费等级分布',\n        value: 3\n      }, {\n        text: '新注册付费等级分布',\n        value: 4\n      }],\n      levelType: {\n        dau_level: 0,\n        install_level: 1,\n        pay_level: 2,\n        new_pay_level: 3,\n        pay_install_level: 4\n      },\n      reportLevelForm: {\n        index: 0\n      },\n      columnsHeadr: [{\n        title: '日期（星期）',\n        key: 'ds',\n        width: 150,\n        align: 'center',\n        fixed: 'left'\n      }],\n      columsOs: [{\n        title: '操作系统',\n        key: 'os',\n        width: 150,\n        align: 'center',\n        fixed: 'left'\n      }],\n      columsLevel: [],\n      columsLevelSum: [],\n      dauLevelData: [],\n      dauLevelDataSum: [],\n      chartArr: [],\n      levelG2: {}\n    };\n  },\n  methods: {\n    enter: function enter() {\n      this.isShowCondition = true;\n    },\n    leave: function leave() {\n      this.isShowCondition = false;\n    },\n    init: function init() {\n      this.LevelLoading = true;\n      this.queryLevel();\n    },\n    changeType: function changeType() {\n      this.LevelLoading = true;\n      this.queryLevel();\n    },\n    queryLevel: function queryLevel() {\n      var _this = this;\n\n      var params = {\n        gameid: parseInt(this.getStore('gameid')),\n        date: parseInt(this.data),\n        levelType: parseInt(this.reportLevelForm.index),\n        os: this.phone\n      };\n\n      _queryLevel(params).then(function (e) {\n        _this.LevelLoading = false;\n\n        if (e.success) {\n          var dauLevel = e.levelDau;\n          var dauLevelSum = e.levelDauSum; //最大等级-----------\n\n          if (dauLevel && dauLevelSum) {\n            (function () {\n              var maxLevel = 0;\n              var dauLevelKeys = Object.keys(dauLevel).sort(function (o1, o2) {\n                if (o1 < o2) {\n                  return 1;\n                } else if (o1 > o2) {\n                  return -1;\n                } else {\n                  return 0;\n                }\n              });\n\n              if (Object.keys(dauLevel).length > 0 && Object.keys(dauLevelSum).length > 0) {\n                var maxDate = dauLevelKeys[0];\n                var maxDauLevel = dauLevel[maxDate];\n                maxLevel = maxDauLevel[maxDauLevel.length - 1].level;\n              } // 处理表头-----------\n\n\n              var titleLevel = [];\n\n              for (var i = 1; i <= maxLevel; i++) {\n                var dauLevelTitle = new Object();\n                dauLevelTitle.title = i + '级';\n                dauLevelTitle.key = i + 'level';\n                dauLevelTitle.width = 80;\n                dauLevelTitle.align = 'center';\n                titleLevel.push(dauLevelTitle);\n              }\n\n              var dauLevels = [],\n                  dauLevelSuns = [];\n\n              var _loop = function _loop(key) {\n                var dauLevelObj = {};\n                dauLevelObj.ds = weekChange(dauLevel[key][0].ds);\n                dauLevelObj.os = weekChange(dauLevel[key][0].os);\n\n                for (var _i2 = 1; _i2 <= maxLevel; _i2++) {\n                  dauLevelObj[_i2 + 'level'] = 0;\n                }\n\n                dauLevel[key].forEach(function (item) {\n                  if (_this.reportLevelForm.index == _this.levelType.dau_level) {\n                    dauLevelObj[item.level + 'level'] = item.dauNum == 0 ? 0 : (item.dauLevelNumbers / item.dauNum * 100).toFixed(2);\n                  } else if (_this.reportLevelForm.index == _this.levelType.install_level) {\n                    dauLevelObj[item.level + 'level'] = item.installNum == 0 ? 0 : (item.installLevelNumbers / item.installNum * 100).toFixed(2);\n                  } else if (_this.reportLevelForm.index == _this.levelType.pay_level) {\n                    dauLevelObj[item.level + 'level'] = item.payCount == 0 ? 0 : (item.payLevelNumbers / item.payCount * 100).toFixed(2);\n                  } else if (_this.reportLevelForm.index == _this.levelType.new_pay_level) {\n                    dauLevelObj[item.level + 'level'] = item.newPayCount == 0 ? 0 : (item.newPayLevelNumbers / item.newPayCount * 100).toFixed(2);\n                  } else if (_this.reportLevelForm.index == _this.levelType.pay_install_level) {\n                    dauLevelObj[item.level + 'level'] = item.payInstallCount == 0 ? 0 : (item.payInstallLevelNumbers / item.payInstallCount * 100).toFixed(2);\n                  }\n                });\n                dauLevels.push(dauLevelObj);\n              };\n\n              for (var key in dauLevel) {\n                _loop(key);\n              } //聚合数据----------\n\n\n              var dauLevelSumTitleNum = Math.ceil(maxLevel / 10);\n              var chartArr = [];\n              var titleLevelSum = [];\n\n              for (var _i = 1; _i <= dauLevelSumTitleNum; _i++) {\n                var dauLevelSumTitle = new Object();\n                dauLevelSumTitle[_i * 10 + 'level'] = _i * 10 - 9 + \"~\" + _i * 10 + '级';\n                dauLevelSumTitle.title = _i * 10 - 9 + \"~\" + _i * 10 + '级';\n                dauLevelSumTitle.key = _i * 10 + 'level';\n                dauLevelSumTitle.width = 100;\n                dauLevelSumTitle.align = 'center';\n                titleLevelSum.push(dauLevelSumTitle);\n              }\n\n              var _loop2 = function _loop2(_key) {\n                var dauLevelSumObject = {};\n                dauLevelSumObject.ds = weekChange(dauLevelSum[_key][0].ds);\n                dauLevelSumObject.os = weekChange(dauLevelSum[_key][0].os);\n\n                dauLevelSum[_key].forEach(function (item, index) {\n                  //层叠柱状图data处理\n                  var chartObj = new Object();\n                  chartObj.name = (index + 1) * 10 - 9 + \"~\" + (index + 1) * 10 + '级';\n                  chartObj.time = _key.substr(5, 5);\n\n                  if (_this.reportLevelForm.index == _this.levelType.dau_level) {\n                    dauLevelSumObject[(index + 1) * 10 + 'level'] = item.dauNum == 0 ? 0 : (item.dauLevelNumbers / item.dauNum * 100).toFixed(2);\n                    chartObj.value = item.dauNum == 0 ? 0 : parseFloat((item.dauLevelNumbers / item.dauNum * 100).toFixed(2));\n                  } else if (_this.reportLevelForm.index == _this.levelType.install_level) {\n                    dauLevelSumObject[(index + 1) * 10 + 'level'] = item.dauNum == 0 ? 0 : (item.dauLevelNumbers / item.installNum * 100).toFixed(2);\n                    chartObj.value = item.dauNum == 0 ? 0 : parseFloat((item.dauLevelNumbers / item.installNum * 100).toFixed(2));\n                  } else if (_this.reportLevelForm.index == _this.levelType.pay_level) {\n                    dauLevelSumObject[(index + 1) * 10 + 'level'] = item.dauNum == 0 ? 0 : (item.dauLevelNumbers / item.payCount * 100).toFixed(2);\n                    chartObj.value = item.dauNum == 0 ? 0 : parseFloat((item.dauLevelNumbers / item.payCount * 100).toFixed(2));\n                  } else if (_this.reportLevelForm.index == _this.levelType.new_pay_level) {\n                    dauLevelSumObject[(index + 1) * 10 + 'level'] = item.dauNum == 0 ? 0 : (item.dauLevelNumbers / item.newPayCount * 100).toFixed(2);\n                    chartObj.value = item.dauNum == 0 ? 0 : parseFloat((item.dauLevelNumbers / item.newPayCount * 100).toFixed(2));\n                  } else if (_this.reportLevelForm.index == _this.levelType.pay_install_level) {\n                    dauLevelSumObject[(index + 1) * 10 + 'level'] = item.dauNum == 0 ? 0 : (item.dauLevelNumbers / item.payInstallCount * 100).toFixed(2);\n                    chartObj.value = item.dauNum == 0 ? 0 : parseFloat((item.dauLevelNumbers / item.payInstallCount * 100).toFixed(2));\n                  }\n\n                  chartArr.push(chartObj);\n                });\n\n                dauLevelSuns.push(dauLevelSumObject);\n              };\n\n              for (var _key in dauLevelSum) {\n                _loop2(_key);\n              }\n\n              chartArr.sort(function (a, b) {\n                if (a.time < b.time) {\n                  return -1;\n                } else if (a.time > b.time) {\n                  return 1;\n                } else {\n                  return 0;\n                }\n              });\n              dauLevels.sort(function (obj1, obj2) {\n                var val1 = obj1.ds;\n                var val2 = obj2.ds;\n\n                if (val1 < val2) {\n                  return 1;\n                } else if (val1 > val2) {\n                  return -1;\n                } else {\n                  return 0;\n                }\n              });\n              dauLevelSuns.sort(function (obj1, obj2) {\n                var val1 = obj1.ds;\n                var val2 = obj2.ds;\n\n                if (val1 < val2) {\n                  return 1;\n                } else if (val1 > val2) {\n                  return -1;\n                } else {\n                  return 0;\n                }\n              });\n\n              if (_this.phone == _this.defaultPhone.android || _this.phone == _this.defaultPhone.ios) {\n                _this.columsLevel = _this.columnsHeadr.concat(_this.columsOs).concat(titleLevel);\n                _this.columsLevelSum = _this.columnsHeadr.concat(_this.columsOs).concat(titleLevelSum);\n              } else {\n                _this.columsLevel = _this.columnsHeadr.concat(titleLevel);\n                _this.columsLevelSum = _this.columnsHeadr.concat(titleLevelSum);\n              }\n\n              _this.dauLevelData = dauLevels;\n              _this.dauLevelDataSum = dauLevelSuns;\n              _this.chartArr = chartArr;\n            })();\n          }\n\n          _this.levelG2.changeData(_this.chartArr);\n        }\n      });\n    },\n    levelCharts: function levelCharts() {\n      this.levelG2 = new G2.Chart({\n        container: 'levelChart',\n        forceFit: true,\n        height: 500\n      });\n      this.levelG2.source(this.chartArr, {\n        value: {\n          min: 0,\n          formatter: function formatter(val) {\n            return val + '%';\n          }\n        }\n      });\n      this.levelG2.axis('time', {\n        label: {\n          rotate: -Math.PI / 2.5,\n          textAlign: 'end',\n          textBaseline: 'middle'\n        }\n      });\n      this.levelG2.intervalStack().position('time*value').color('name').adjust('stack').shape('text');\n      this.levelG2.render();\n    },\n    compares: function compares(obj1, obj2) {\n      var val1 = obj1.ds;\n      var val2 = obj2.ds;\n\n      if (val1 < val2) {\n        return 1;\n      } else if (val1 > val2) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.levelCharts();\n    this.init();\n  }\n};",null]}