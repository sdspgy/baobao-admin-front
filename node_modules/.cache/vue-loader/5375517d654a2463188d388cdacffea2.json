{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/reportData/reportDevice/reportDevice.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/reportData/reportDevice/reportDevice.vue","mtime":1585708995336},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {queryDevice} from '@/api/index';\nimport {weekChange} from '@/libs/changeWeek';\n\nexport default {\n    name: \"reportDevice\",\n    data() {\n        return {\n            type: \"0\",\n            chartDevice: [],\n            G2Device: {},\n        }\n    },\n    methods: {\n        init() {\n            this.queryDevices();\n        },\n        queryDevices() {\n            let params = {\n                gameid: parseInt(this.getStore('gameid')),\n                type: parseInt(this.type)\n            }\n            queryDevice(params).then(e => {\n                if (e.success) {\n                    let devices = e.deviceDis;\n                    let dailyInstallNum = e.shareDailyResultTypes[0].installNum,\n                        dailyDauNum = e.shareDailyResultTypes[0].dauNum;\n                    let chartDevice = [];\n                    let i = devices.length > 20 ? 20 : devices.length;\n                    if (this.type == \"0\") {\n                        for (; i > 0; i--) {\n                            let deviceObj = new Object();\n                            deviceObj.name = devices[i].device;\n                            deviceObj.value = devices[i].deviceInstallNumbers;\n                            deviceObj.precentage = (dailyInstallNum == 0 ? 0 : (devices[i].deviceInstallNumbers / dailyInstallNum).toFixed(2));\n                            chartDevice.push(deviceObj);\n                        }\n                    } else {\n                        for (; i > 0; i--) {\n                            let deviceObj = new Object();\n                            deviceObj.name = devices[i].device;\n                            deviceObj.value = devices[i].deviceDauNumbers;\n                            deviceObj.precentage = (dailyDauNum == 0 ? 0 : (devices[i].deviceDauNumbers / dailyDauNum).toFixed(2));\n                            chartDevice.push(deviceObj);\n                        }\n                    }\n                    this.chartDevice = chartDevice.sort(this.compares);\n                    this.G2Device.changeData(this.chartDevice);\n                }\n            })\n        },\n        compares(obj1, obj2) {\n            var val1 = obj1.value;\n            var val2 = obj2.value;\n            if (val1 < val2) {\n                return 1;\n            } else if (val1 > val2) {\n                return -1;\n            } else {\n                return 0;\n            }\n        },\n        defaultG2() {\n            this.G2Device = new G2.Chart({\n                container: 'deviceG2',\n                forceFit: true,\n                width:600,\n                height: 400\n            });\n            this.G2Device.source(this.chartDevice, {});\n            this.G2Device.coord();\n            // 坐标轴文本旋转\n            this.G2Device.axis('name', {\n                label: {\n                    rotate: Math.PI / 0.3,\n                    textAlign: 'end',\n                    textBaseline: 'middle',\n                }\n            });\n            // this.G2Device.tooltip({\n            //     // showCrosshairs: true, //纵坐标线\n            //     // showItemMarker: false, //去小原点\n            //     onShow: function onShow(ev) {\n            //         const items = ev.items;\n            //         items[0].name = null;\n            //         items[0].name = items[0].title;\n            //         items[0].value = '' + items[0].value + ';' + items[0].origin.precentage + '%';\n            //     },\n            //     offsetX: -30\n            // });\n            this.G2Device.interval()\n                .position('name*value')\n                .label('value', {\n                    offset: 10,\n                    style: {\n                        fill: '#595959',\n                        fontSize: 12,\n                    },\n                });\n            this.G2Device.scale('value', {\n                alias: '数量',\n            });\n            // 柱状图添加文本\n            // this.chartDevice.forEach(function (obj) {\n            //     this.G2Device.guide().text({\n            //         position: [obj.name, obj.value],\n            //         content: obj.value,\n            //         style: {\n            //             textAlign: 'center',\n            //             textBaseline: 'bottom'\n            //         },\n            //         offsetY: 5,\n            //         offsetX: 7,\n            //     });\n            // });\n            this.G2Device.render();\n        }\n    },\n    mounted() {\n        this.defaultG2();\n        this.init();\n    },\n}\n",{"version":3,"sources":["reportDevice.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkfile":"reportDevice.vue","sourceRoot":"src/views/reportData/reportDevice","sourcesContent":["<template>\n    <div style=\"background-color:#fff;\">\n        <RadioGroup style=\"margin-left: 10px\" type=\"button\" v-model=\"type\" @on-change=\"init()\">\n            <Radio label=\"0\"  style=\"margin: 10px 10px\">\n                <span>安装</span>\n            </Radio>\n            <Radio label=\"1\"  style=\"margin: 10px 10px\">\n                <span>活跃</span>\n            </Radio>\n        </RadioGroup>\n        <div class=\"deviceG2\">\n            <div id=\"deviceG2\"></div>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import {queryDevice} from '@/api/index';\n    import {weekChange} from '@/libs/changeWeek';\n\n    export default {\n        name: \"reportDevice\",\n        data() {\n            return {\n                type: \"0\",\n                chartDevice: [],\n                G2Device: {},\n            }\n        },\n        methods: {\n            init() {\n                this.queryDevices();\n            },\n            queryDevices() {\n                let params = {\n                    gameid: parseInt(this.getStore('gameid')),\n                    type: parseInt(this.type)\n                }\n                queryDevice(params).then(e => {\n                    if (e.success) {\n                        let devices = e.deviceDis;\n                        let dailyInstallNum = e.shareDailyResultTypes[0].installNum,\n                            dailyDauNum = e.shareDailyResultTypes[0].dauNum;\n                        let chartDevice = [];\n                        let i = devices.length > 20 ? 20 : devices.length;\n                        if (this.type == \"0\") {\n                            for (; i > 0; i--) {\n                                let deviceObj = new Object();\n                                deviceObj.name = devices[i].device;\n                                deviceObj.value = devices[i].deviceInstallNumbers;\n                                deviceObj.precentage = (dailyInstallNum == 0 ? 0 : (devices[i].deviceInstallNumbers / dailyInstallNum).toFixed(2));\n                                chartDevice.push(deviceObj);\n                            }\n                        } else {\n                            for (; i > 0; i--) {\n                                let deviceObj = new Object();\n                                deviceObj.name = devices[i].device;\n                                deviceObj.value = devices[i].deviceDauNumbers;\n                                deviceObj.precentage = (dailyDauNum == 0 ? 0 : (devices[i].deviceDauNumbers / dailyDauNum).toFixed(2));\n                                chartDevice.push(deviceObj);\n                            }\n                        }\n                        this.chartDevice = chartDevice.sort(this.compares);\n                        this.G2Device.changeData(this.chartDevice);\n                    }\n                })\n            },\n            compares(obj1, obj2) {\n                var val1 = obj1.value;\n                var val2 = obj2.value;\n                if (val1 < val2) {\n                    return 1;\n                } else if (val1 > val2) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n            },\n            defaultG2() {\n                this.G2Device = new G2.Chart({\n                    container: 'deviceG2',\n                    forceFit: true,\n                    width:600,\n                    height: 400\n                });\n                this.G2Device.source(this.chartDevice, {});\n                this.G2Device.coord();\n                // 坐标轴文本旋转\n                this.G2Device.axis('name', {\n                    label: {\n                        rotate: Math.PI / 0.3,\n                        textAlign: 'end',\n                        textBaseline: 'middle',\n                    }\n                });\n                // this.G2Device.tooltip({\n                //     // showCrosshairs: true, //纵坐标线\n                //     // showItemMarker: false, //去小原点\n                //     onShow: function onShow(ev) {\n                //         const items = ev.items;\n                //         items[0].name = null;\n                //         items[0].name = items[0].title;\n                //         items[0].value = '' + items[0].value + ';' + items[0].origin.precentage + '%';\n                //     },\n                //     offsetX: -30\n                // });\n                this.G2Device.interval()\n                    .position('name*value')\n                    .label('value', {\n                        offset: 10,\n                        style: {\n                            fill: '#595959',\n                            fontSize: 12,\n                        },\n                    });\n                this.G2Device.scale('value', {\n                    alias: '数量',\n                });\n                // 柱状图添加文本\n                // this.chartDevice.forEach(function (obj) {\n                //     this.G2Device.guide().text({\n                //         position: [obj.name, obj.value],\n                //         content: obj.value,\n                //         style: {\n                //             textAlign: 'center',\n                //             textBaseline: 'bottom'\n                //         },\n                //         offsetY: 5,\n                //         offsetX: 7,\n                //     });\n                // });\n                this.G2Device.render();\n            }\n        },\n        mounted() {\n            this.defaultG2();\n            this.init();\n        },\n    }\n</script>\n\n<style scoped>\n    .deviceG2 {\n        padding: 0px 0px 0px 50px;\n        border-radius: 10px 10px 10px 10px;\n        background-color: #fff;\n        width: 60%;\n        margin: 10px 10px;\n    }\n</style>\n"]}]}