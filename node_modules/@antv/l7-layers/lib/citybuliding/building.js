"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _BaseLayer2 = _interopRequireDefault(require("../core/BaseLayer"));

var _build = _interopRequireDefault(require("./models/build"));

var CityBuildingLayer = function (_BaseLayer) {
  (0, _inherits2.default)(CityBuildingLayer, _BaseLayer);

  function CityBuildingLayer() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, CityBuildingLayer);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CityBuildingLayer)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this.type = 'PolygonLayer';
    return _this;
  }

  (0, _createClass2.default)(CityBuildingLayer, [{
    key: "buildModels",
    value: function buildModels() {
      this.layerModel = new _build.default(this);
      this.models = this.layerModel.buildModels();
    }
  }, {
    key: "setLight",
    value: function setLight(t) {
      this.updateLayerConfig({
        time: t
      });
    }
  }, {
    key: "getConfigSchema",
    value: function getConfigSchema() {
      return {
        properties: {
          opacity: {
            type: 'number',
            minimum: 0,
            maximum: 1
          }
        }
      };
    }
  }, {
    key: "getModelType",
    value: function getModelType() {
      return 'citybuilding';
    }
  }]);
  return CityBuildingLayer;
}(_BaseLayer2.default);

exports.default = CityBuildingLayer;
//# sourceMappingURL=building.js.map