{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/reportdata/reportDevice/reportDevice.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/reportdata/reportDevice/reportDevice.vue","mtime":1586836225602},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryDevice } from '@/api/index';\nimport { weekChange } from '@/libs/changeWeek';\nexport default {\n  name: 'reportDevice',\n  data: function data() {\n    return {\n      type: '0',\n      chartDevice: [],\n      G2Device: {},\n      data: \"7\"\n    };\n  },\n  methods: {\n    init: function init() {\n      this.queryDevices();\n    },\n    queryDevices: function queryDevices() {\n      var _this = this;\n\n      var params = {\n        gameid: parseInt(this.getStore('gameid')),\n        type: parseInt(this.type),\n        data: parseInt(this.data)\n      };\n      queryDevice(params).then(function (e) {\n        if (e.success) {\n          var devices = e.deviceDis;\n          var dailyInstallNum = e.shareDailyResultTypes[0].installNum,\n              dailyDauNum = e.shareDailyResultTypes[0].dauNum;\n          var chartDevice = [];\n          var i = devices.length > 30 ? 30 : devices.length;\n\n          if (_this.type == '0') {\n            for (; i > 0; i--) {\n              var deviceObj = new Object();\n              deviceObj.name = devices[i].device;\n              deviceObj.value = devices[i].deviceInstallNumbers;\n              deviceObj.precentage = dailyInstallNum == 0 ? 0 : (devices[i].deviceInstallNumbers / dailyInstallNum).toFixed(2);\n              chartDevice.push(deviceObj);\n            }\n          } else {\n            for (; i > 0; i--) {\n              var _deviceObj = new Object();\n\n              _deviceObj.name = devices[i].device;\n              _deviceObj.value = devices[i].deviceDauNumbers;\n              _deviceObj.precentage = dailyDauNum == 0 ? 0 : (devices[i].deviceDauNumbers / dailyDauNum).toFixed(2);\n              chartDevice.push(_deviceObj);\n            }\n          }\n\n          _this.chartDevice = chartDevice.sort(_this.compares);\n\n          _this.G2Device.changeData(_this.chartDevice);\n        }\n      });\n    },\n    compares: function compares(obj1, obj2) {\n      var val1 = obj1.value;\n      var val2 = obj2.value;\n\n      if (val1 < val2) {\n        return 1;\n      } else if (val1 > val2) {\n        return -1;\n      } else {\n        return 0;\n      }\n    },\n    defaultG2: function defaultG2() {\n      this.G2Device = new G2.Chart({\n        container: 'deviceG2',\n        forceFit: true,\n        width: 800,\n        height: 400\n      });\n      this.G2Device.source(this.chartDevice, {});\n      this.G2Device.coord(); // 坐标轴文本旋转\n\n      this.G2Device.axis('name', {\n        label: {\n          rotate: Math.PI / 0.3,\n          textAlign: 'end',\n          textBaseline: 'middle'\n        }\n      }); // this.G2Device.tooltip({\n      //     // showCrosshairs: true, //纵坐标线\n      //     // showItemMarker: false, //去小原点\n      //     onShow: function onShow(ev) {\n      //         const items = ev.items;\n      //         items[0].name = null;\n      //         items[0].name = items[0].title;\n      //         items[0].value = '' + items[0].value + ';' + items[0].origin.precentage + '%';\n      //     },\n      //     offsetX: -30\n      // });\n\n      this.G2Device.interval().position('name*value').label('value', {\n        offset: 10,\n        style: {\n          fill: '#595959',\n          fontSize: 12\n        }\n      });\n      this.G2Device.scale('value', {\n        alias: '数量'\n      }); // 柱状图添加文本\n      // this.chartDevice.forEach(function (obj) {\n      //     this.G2Device.guide().text({\n      //         position: [obj.name, obj.value],\n      //         content: obj.value,\n      //         style: {\n      //             textAlign: 'center',\n      //             textBaseline: 'bottom'\n      //         },\n      //         offsetY: 5,\n      //         offsetX: 7,\n      //     });\n      // });\n\n      this.G2Device.render();\n    }\n  },\n  mounted: function mounted() {\n    this.defaultG2();\n    this.init();\n  }\n};",null]}